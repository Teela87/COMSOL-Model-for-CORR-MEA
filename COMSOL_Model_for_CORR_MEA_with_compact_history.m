function out = model
%
% COMSOL_Model_for_CORR_MEA_with_compact_history.m
%
% Model exported on Apr 21 2024, 19:05 by COMSOL 6.2.0.290.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('C:\Users\tarte\OneDrive - University of Toronto\CORR Modeling Project\Final CORR Model Development');

model.label('COMSOL_Model_for_CORR_MEA_with_compact_history.mph');

model.param.set('height_GDL', '100[um]', '325[um] in (Weng2020)');
model.param.set('height_CL', '180[nm]');
model.param.set('height_CNPs', '2[um]');
model.param.set('height_MEA', '50[um]', '6% swelling for Sustainion');
model.param.set('height_Ni', '100[um]');
model.param.set('height_elec', '50[um]');
model.param.set('D_COx', '2.3e-9[m^2/s]', '(Jouny2018)');
model.param.set('A1_CO', '9.8e-6', 'First constant for CO in Henry''s law; from (Sander2015)');
model.param.set('B1_CO', '1300', 'Second constant for CO in Henry''s law; from (Sander2015)');
model.param.set('c_K', '1[M]', 'input electrolyte concentration');
model.param.set('Sech_h_G0', '-0.0172', 'from Chris M.''s SI, TS1');
model.param.set('Sech_h_K', '0.0922', 'from Chris M.''s SI, TS1');
model.param.set('Sech_h_OH', '0.0839', 'from Chris M.''s SI, TS1');
model.param.set('Sech_h_T', '-0.000338', 'from Chris M.''s SI, TS1');
model.param.set('c_H_b', 'cH0');
model.param.set('c_H_CL', 'cH0');
model.param.set('c_H2O', '55.5[M]');
model.param.set('c_OH_b', 'c_OH_IC', '-log10(Kw/cOHb*1[1/M])');
model.param.set('c_OH_IC', 'c_K');
model.param.set('D_CO_g', '.2e-4[m^2/s]');
model.param.set('porosity_0_GDL', '0.7', '(Weng2020)');
model.param.set('porosity_0_CL', '0.5', '(Weng2020)');
model.param.set('porosity_0_CNPs', '0.6', '*');
model.param.set('porosity_anode', '0.8', 'Assumed');
model.param.set('CO_density', '1.51[kg/m^3]', 'at 20degC; find a function of T');
model.param.set('CO_viscosity', '1.74e-5[Pa*s]', 'at 20degC; find a function of T');
model.param.set('c_H_IC', 'cH0');
model.param.set('D_Hx', '9.311e-5[cm^2/s]', '(CRC Handbook)');
model.param.set('D_H2O', '2.57e-9[m^2/s]', 'No reference (except Chris''s EES)');
model.param.set('D_Kx', '1.957e-5[cm^2/s]', '(CRC Handbook)');
model.param.set('D_OHx', '5.293e-5[cm^2/s]', '(Weng2018a)');
model.param.set('sigma_cnps', '10000[S/m]', '*');
model.param.set('c_K_unitless', 'c_K/1[mol/m^3]');
model.param.set('sigma_anode', '2.38e6[S/m]', '*');
model.param.set('V_cath', '-0.1[V]');
model.param.set('a_K', '0.622e-9[m]', 'the effective solvated diameter of K+ (Bohra2019)');
model.param.set('a_OH', '0.6e-9[m]', 'Bohra2019');
model.param.set('permea_0_CL', '8e-16[m^2]', '(Weng2020)');
model.param.set('permea_0_CNPs', '8e-16[m^2]', 'assumed to be the same as CL for now; (Weng2020)');
model.param.set('permea_0_GDL', '8.4e-13[m^2]', '(Weng2020)');
model.param.set('pore_GDL', '7.33e-7[m]', '(Weng2019)');
model.param.set('pore_CL', '25[nm]', '(Weng2019)');
model.param.set('pore_CNPs', '250[nm]', 'approximated');
model.param.set('M_CO', '28.01[g/mol]');
model.param.set('M_H2O', '18.015[g/mol]');
model.param.set('M_H2', '2.016[g/mol]');
model.param.set('M_O2', '15.999[g/mol]');
model.param.set('M_N2', '28.0134[g/mol]');
model.param.set('D_CO_H2', '0.743[cm^2/s]', '(Weng2018a)');
model.param.set('FE_C2', '0.365');
model.param.set('f_I_CNPs', '0.4', 'ionomer volume fraction in pore space; (Weng2020)');
model.param.set('f_I_CL', '0', 'ionomer volume fraction in pore space; (Weng2020)');
model.param.set('pH', 'pH_in', '8.8 for Ar-saturated 0.1MKHCO3; 6.8 for CO2-saturated 0.1MKHCO3');
model.param.set('pH_H', '-log10(Kw/cOH0*1[1/M])');
model.param.set('M_C2H4', '28.05[g/mol]');
model.param.set('V_M', '1/(IEC*rho_AEM)');
model.param.set('V_W', 'M_H2O/997[kg/m^3]');
model.param.set('M_AEM', 'rho_AEM * V_M');
model.param.set('M_OH', '17.008[g/mol]');
model.param.set('M_H', '1.007[g/mol]');
model.param.set('M_K', '39.0983[g/mol]');
model.param.set('vp_H2', '7.07', '(Fuller1966)');
model.param.set('vp_H2O', '12.7', '(Fuller1966)');
model.param.set('vp_CO', '18.9', '(Fuller1966)');
model.param.set('D_H2_C2H4', '0.483[cm^2/s]', 'ref1');
model.param.set('D_CO_C2H4', '0.151[cm^2/s]');
model.param.set('D_H2O_C2H4', '0.204[cm^2/s]');
model.param.set('pressure', 'partial_pressure_CO');
model.param.set('MM_H2O', 'M_H2O/1[g/mol]');
model.param.set('MM_CO', 'M_CO/1[g/mol]');
model.param.set('MM_H2', 'M_H2/1[g/mol]');
model.param.set('PP', 'pressure/1[atm]');
model.param.set('AEM_charge', 'rho_AEM * IEC');
model.param.set('pOH', '14-pH');
model.param.set('cMem', '0[M]');
model.param.set('width', '2.25[cm]');
model.param.set('cMem_end', '0.5[M]');
model.param.set('V_cath_end', '-1.6[V]');
model.param.set('cMem_end2', '1.5[M]');
model.param.set('V_cath_end2', '-1.8[V]');
model.param.set('sigma_CL', '100[S/m]');
model.param.set('therm_GDL', '0.3[W/(m*K)]', '(Cai2018)');
model.param.set('therm_CL', '18.5[W/(m*K)]', '(Jeong2023)');
model.param.set('gamma', '71.78[mN/m]');
model.param.set('D_CO2', '1.91e-5[cm^2/s]', 'CRC; at 25 degC; and (Weng2018a)');
model.param.set('D_CO3', '0.923e-5[cm^2/s]', '(Weng2018a)');
model.param.set('D_HCO3', '1.185e-5[cm^2/s]', '(Weng2018a)');
model.param.set('c_HCO3_IC', 'c_K');
model.param.set('pKc1', '6.37');
model.param.set('pKd1', '10.25');
model.param.set('pH_in', '14 - (-log10(c_OH_IC[1/M]))', 'corresponds to the experimental KOH electrolyte pH');
model.param.set('c_CO3_IC', '1e-5[M]');
model.param.set('M_CO3', '60.0089[g/mol]');
model.param.set('M_HCO3', '61.0168[g/mol]');
model.param.set('electroneutrality', '(cK0 + cH0 - cOH0)');
model.param.set('c_unit', '1000[mol/m^3]', 'Unit activity concentration');
model.param.set('cHCO30', 'cK0', 'Initial concentration of HCO3-');
model.param.set('I', '0.185', 'Ionic strength in molar');
model.param.set('cH0', '10^(-pH)[M]', 'Initial concentration of H+');
model.param.set('cCO30', '1e-8[M]', '(K2*cHCO30/cH0) + (K4*cHCO30*cOH0); Initial concentration of CO3 2-');
model.param.set('cOH0', 'c_OH_IC', 'Initial concentration of OH-');
model.param.set('M_CO2', '44.01[g/mol]');
model.param.set('D_H2CO3', '2e-9[m^2/s]');
model.param.set('M_H2CO3', '62.03[g/mol]');
model.param.set('D_H2_CO2', '0.646[cm^2/s]', '(Weng2018a)');
model.param.set('D_CO_CO2', '0.152[cm^2/s]', '(Weng2018a)');
model.param.set('vp_CO2', '26.9', '(Fuller1966)');
model.param.set('MM_CO2', 'M_CO2/1[g/mol]');
model.param.set('D_CO2_C2H4', '0.122e-4[m^2/s]', '(Hongo1982)');
model.param.set('i0_Ramp', '1');
model.param.set('alpha_Ramp', '1.2');
model.param.set('aw_Ramp2', '1');
model.param.set('K1', '(10^-6.37)[M]');
model.param.set('k1f', '(3.71e-2)[1/s]');
model.param.set('k1r', 'k1f/K1');
model.param.set('K2', '(10^-10.32)[M]');
model.param.set('k2f', '59.44[1/s]');
model.param.set('k2r', 'k2f/K2');
model.param.set('K3', 'K1/Kw');
model.param.set('k3f', '(2.23e3)[L/(mol*s)]');
model.param.set('k3r', 'k3f/K3');
model.param.set('K4', 'K2/Kw');
model.param.set('k4f', '(6e9)[L/(mol*s)]');
model.param.set('k4r', 'k4f/K4');
model.param.set('Kw', '(10^-14)[M^2]');
model.param.set('kwf_web', '2.4e-5[mol/(L*s)]', '(Singh2017b)');
model.param.set('kwr_web', 'kwf_web/Kw');
model.param.set('pH_CL', 'pH', 'estimated; just to see solution at this pH in E0_x');
model.param.set('cK0', 'c_K');
model.param.set('alpha_Ramp_initial', '1.2');
model.param.set('T_in', 'T_in_cathode');
model.param.set('V_cath_end3', '-1.9[V]');
model.param.set('V_cath_end4', '-2.2[V]');
model.param.set('c_CO_Henry', 'KH_CO[mol/((m^3)*Pa)]*partial_pressure_CO', 'CO solubility acc. to Henry''s law');
model.param.set('KH_CO', 'A1_CO*exp(B1_CO*((1/TT_in)-(1/298.15)))', 'Henry''s constant for CO');
model.param.set('TT_in', 'T_in/1[K]');
model.param.set('therm_KOH', '0.6[W/(m*K)]', 'Mandin2019');
model.param.set('Sech_h_G', 'Sech_h_G0+(Sech_h_T*(T_in-298.15[K])*1[1/K])');
model.param.set('alpha_H2_0', '0.19');
model.param.set('alpha_C2H4_0', '0.71');
model.param.set('alpha_AcO_0', '0.28');
model.param.set('alpha_EtOH_0', '0.74');
model.param.set('alpha_PrOH_0', '0.82');
model.param.set('alpha_O2', '1.5');
model.param.set('alpha_CO', '0.07');
model.param.set('alpha_CH4', '1.13');
model.param.set('i0_C2H4', '1[A/m^2]*i0_C2H4_u/exp_factor_C2H4');
model.param.set('i0_H2', '1[mA/cm^2]*i0_H2_u');
model.param.set('i0_AcO', '1[A/m^2]*i0_AcO_u/exp_factor_AcO');
model.param.set('i0_EtOH', '1[A/m^2]*i0_EtOH_u/exp_factor_EtOH');
model.param.set('i0_PrOH', '1[A/m^2]*i0_PrOH_u/exp_factor_PrOH');
model.param.set('i_exp_C2H4', '-95[mA/cm^2]', '37 at 2.5V');
model.param.set('i_exp_EtOH', '-40.6[mA/cm^2]', '18 at 2.5V');
model.param.set('i_exp_PrOH', '-18.6[mA/cm^2]', '13 at 2.5V');
model.param.set('i_exp_AcO', '-17.4[mA/cm^2]', '11 at 2.5V');
model.param.set('i0_H2_u', '1.8e2');
model.param.set('i0_AcO_u', '1.6e-3');
model.param.set('i0_C2H4_u', '2e-8');
model.param.set('i0_EtOH_u', '2.8e-9');
model.param.set('i0_PrOH_u', '2e-11');
model.param.set('i_exp_H2', '-32.7[mA/cm^2]');
model.param.set('d_CO_PrOH_1', '1.1', 'fitted');
model.param.set('d_H2O_PrOH_1', '5', 'assumed');
model.param.set('d_CO_EtOH_1', '1.15', 'fitted');
model.param.set('d_H2O_EtOH_1', '3', 'assumed');
model.param.set('d_CO_C2H4_1', '1', 'fitted');
model.param.set('d_H2O_C2H4_1', '3', 'assumed');
model.param.set('d_CO_AcO_1', '0.17', 'fitted');
model.param.set('d_H2O_AcO_1', '2', 'assumed');
model.param.set('d_H2O_H2_1', '2', 'assumed');
model.param.set('partial_pressure_CO', '1[atm]', 'if this is >1, adjust the N2 expression in the Initial values and Input mass Fraction in the Transport of Concentrated Species');
model.param.set('therm_Ti', '21.9[W/(m*K)]', 'https://www.americanelements.com/titanium-mesh-7440-32-6');
model.param.set('therm_AEM', '0.0025[W/(cm*K)]');
model.param.set('pressure_in', 'if(partial_pressure_CO>1,partial_pressure_CO, 1[atm])', 'specify at beginning; GDL inlet total gas pressure');
model.param.set('D_CO_N2', '0.231[cm^2/s]', 'crchanbook84');
model.param.set('D_H2_N2', '0.772[cm^2/s]', 'crchanbook84');
model.param.set('D_H2O_N2', '0.242[cm^2/s]', 'crchanbook84');
model.param.set('D_C2H4_N2', '0.163[cm^2/s]', '(Fuller1966)');
model.param.set('a_v_anode', '1e6[1/m]', 'assumed');
model.param.set('a_v_CL', '1e6[1/m]', '(Weng2020)');
model.param.set('a_v_CNPs', '1e4[1/m]', 'Assumed');
model.param.set('cell_area', '5[cm^2]');
model.param.set('therm_CNPs', '3000[W/(m*K)]', '(Sadri2014)');
model.param.set('rho_w', '1[g/cm^3]');
model.param.set('Edrag', '1', 'update after solving the new water flux eqn');
model.param.set('Cw_0', '1/(lambda_AEM*M_H2O/rho_w)');
model.param.set('Edrag_CL', '1');
model.param.set('D_H_T', '(4.49e-5)*1[cm^2/s]*exp(-1430*((1/TT_in)-(1/273)))', 'Weng2019');
model.param.set('D_OH_T', '(2.89e-5)*1[cm^2/s]*exp(-1750*((1/TT_in)-(1/273)))', 'Weng2019');
model.param.set('D_K_T', '(1.96e-5)*1[cm^2/s]*exp(-2300*((1/TT_in)-(1/298)))', 'Weng2019');
model.param.set('D_CO_T', '1.185*(1e-6)[m^2/s]*exp(-16.16[kJ/mol]/(N_A_const*k_B_const*T_in))', '(Poud2014)');
model.param.set('T_in_anode', '25[degC]', 'specify at beginning');
model.param.set('T_in_cathode', '25[degC]', 'specify at beginning');
model.param.set('c_max_K', '1/(N_A_const*(a_K^3))');
model.param.set('Ea_C2H4', '50[kJ/mol]', 'Lu2023');
model.param.set('Ea_EtOH', '45[kJ/mol]', 'Lu2023');
model.param.set('Ea_PrOH', '35[kJ/mol]', 'Lu2023');
model.param.set('Ea_AcO', '25[kJ/mol]', 'Lu2023');
model.param.set('exp_factor_C2H4', 'exp(-50[kJ/mol]/(R_const*25[degC]))');
model.param.set('exp_factor_EtOH', 'exp(-45[kJ/mol]/(R_const*25[degC]))');
model.param.set('exp_factor_PrOH', 'exp(-35[kJ/mol]/(R_const*25[degC]))');
model.param.set('exp_factor_AcO', 'exp(-25[kJ/mol]/(R_const*25[degC]*14))');
model.param.set('a_v_GDL', '1e6[1/m]');
model.param.set('IEC', '1.7[mmol/g]');
model.param.set('lambda_AEM', '10');
model.param.set('rho_AEM', '1.4[g/cm^3]');
model.param.set('rnp_CL', '5e-8[m]', 'not used but can be used to define av as per (Weng2018a)');
model.param.set('rnp_CNPs', '5e-8[m]', 'not used but can be used to define av as per (Weng2018a)');
model.param.set('sigma_cl_s', '5.88e7[S/m]', 'not used');
model.param.set('sigma_PTFE', '5.1e-17[S/m]', 'not used');
model.param.set('sigma_GDL', '220[S/m]', 'not used');
model.param.set('therm_CO', '0.024[W/(m*degC)]');
model.param.set('E_O2_0', '1.23[V]', 'calculated');
model.param.set('E_H2_0', '0[V]', 'calculated');
model.param.set('E_C2H4_0', '0.172[V]', 'CORR');
model.param.set('E_CO_0', '-0.11[V]', '(Weng2020)');
model.param.set('E_AcO_0', '0.454[V]', 'CORR');
model.param.set('E_CH4_0', '0.17[V]', '(Weng2020)');
model.param.set('E_EtOH_0', '0.179[V]', '(Weng2020)');
model.param.set('E_PrOH_0', '0.201[V]', 'CORR');
model.param.set('c_max_OH', '1/(N_A_const*(a_OH^3))');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom4', 1);

model.component('comp1').label('1D MEA full');

model.component('comp1').curvedInterior(false);

model.result.table.create('tbl3', 'Table');
model.result.table.create('tbl4', 'Table');
model.result.table.create('tbl5', 'Table');
model.result.table.create('tbl6', 'Table');
model.result.table.create('tbl7', 'Table');
model.result.table.create('tbl8', 'Table');
model.result.table.create('tbl9', 'Table');
model.result.table.create('tbl10', 'Table');
model.result.table.create('tbl11', 'Table');
model.result.table.create('tbl12', 'Table');
model.result.table.create('tbl13', 'Table');
model.result.table.create('tbl14', 'Table');

model.component('comp1').func.create('int4', 'Interpolation');
model.component('comp1').func.create('int3', 'Interpolation');
model.component('comp1').func.create('int1', 'Interpolation');
model.component('comp1').func.create('int7', 'Interpolation');
model.component('comp1').func.create('an22', 'Analytic');
model.component('comp1').func('int4').active(false);
model.component('comp1').func('int4').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE');
model.component('comp1').func('int4').set('funcname', 'pcAEM');
model.component('comp1').func('int4').set('table', {'0' '0';  ...
'0' '0.1';  ...
'0.0053' '0.2';  ...
'0.1368' '0.3';  ...
'0.4474' '0.4';  ...
'0.7211' '0.5';  ...
'0.8825' '0.6';  ...
'0.9667' '0.7';  ...
'0.9912' '0.8';  ...
'1.0000' '0.9';  ...
'1.0000' '1'});
model.component('comp1').func('int4').set('defvars', true);
model.component('comp1').func('int4').set('interp', 'piecewisecubic');
model.component('comp1').func('int4').set('extrap', 'linear');
model.component('comp1').func('int4').set('fununit', {'atm'});
model.component('comp1').func('int4').set('argunit', {''});
model.component('comp1').func('int4').set('plotinv', true);
model.component('comp1').func('int4').set('defineinv', true);
model.component('comp1').func('int4').set('funcinvname', 's_lAEM');
model.component('comp1').func('int3').label('Interpolation (Saturation of GDL; decreased by 0.1 for PTFE hydrophobicity at Pc>0)');
model.component('comp1').func('int3').set('funcname', 'pcGDL');
model.component('comp1').func('int3').set('table', {'0.031775701' '-60';  ...
'0.031775701' '-50';  ...
'0.031775701' '-40';  ...
'0.031775701' '-30';  ...
'0.031775701' '-20';  ...
'0.031775701' '-10';  ...
'0.042990654' '0';  ...
'0.2196' '10';  ...
'0.7953' '20';  ...
'0.8794' '30';  ...
'0.8794' '40'});
model.component('comp1').func('int3').set('defvars', true);
model.component('comp1').func('int3').set('interp', 'piecewisecubic');
model.component('comp1').func('int3').set('extrap', 'linear');
model.component('comp1').func('int3').set('fununit', {'kPa'});
model.component('comp1').func('int3').set('argunit', {''});
model.component('comp1').func('int3').set('plotinv', true);
model.component('comp1').func('int3').set('defineinv', true);
model.component('comp1').func('int3').set('funcinvname', 's_lGDL');
model.component('comp1').func('int1').label('Interpolation (Saturation of CL & CNPs; can have another one for CNPs; decreased by 0.1 for PTFE hydrophobicity at all Pc)');
model.component('comp1').func('int1').set('funcname', 'pcCL');
model.component('comp1').func('int1').set('table', {'0.1093' '-60';  ...
'0.1280' '-50';  ...
'0.1654' '-40';  ...
'0.2215' '-30';  ...
'0.2776' '-20';  ...
'0.3953' '-10';  ...
'0.5336' '0';  ...
'0.6738' '10';  ...
'0.7822' '20';  ...
'0.8607' '30';  ...
'0.8776' '40'});
model.component('comp1').func('int1').set('defvars', true);
model.component('comp1').func('int1').set('interp', 'piecewisecubic');
model.component('comp1').func('int1').set('extrap', 'linear');
model.component('comp1').func('int1').set('fununit', {'kPa'});
model.component('comp1').func('int1').set('argunit', {''});
model.component('comp1').func('int1').set('plotinv', true);
model.component('comp1').func('int1').set('defineinv', true);
model.component('comp1').func('int1').set('funcinvname', 's_lCL');
model.component('comp1').func('int7').label('Interpolation - H_vap');
model.component('comp1').func('int7').set('funcname', 'H_vap');
model.component('comp1').func('int7').set('table', {'0.01' '45054';  ...
'2' '44970';  ...
'4' '44883';  ...
'10' '44627';  ...
'14' '44456';  ...
'18' '44287';  ...
'20' '44200';  ...
'25' '43988';  ...
'30' '43774';  ...
'34' '43602';  ...
'40' '43345';  ...
'44' '43172';  ...
'50' '42911';  ...
'54' '42738';  ...
'60' '42475';  ...
'70' '42030';  ...
'80' '41579';  ...
'90' '41120';  ...
'96' '40839';  ...
'100' '40650'});
model.component('comp1').func('int7').set('interp', 'piecewisecubic');
model.component('comp1').func('int7').set('extrap', 'linear');
model.component('comp1').func('int7').set('fununit', {'J/mol'});
model.component('comp1').func('int7').set('argunit', {'degC'});
model.component('comp1').func('an22').set('funcname', 'c_CO_sat_2');
model.component('comp1').func('an22').set('expr', '(A1_CO*exp(B1_CO*((1/TTx)-(1/298.15))))*10^(-c_Kx*(Sech_h_K+Sech_h_G)-c_OHx*(Sech_h_OH+Sech_h_G))');
model.component('comp1').func('an22').set('args', {'TTx' 'c_Kx' 'c_OHx'});
model.component('comp1').func('an22').set('fununit', 'mol/((m^3)*Pa)');
model.component('comp1').func('an22').set('argunit', {'' 'M' 'M'});
model.component('comp1').func('an22').set('plotaxis', {'on' 'on' 'on'});
model.component('comp1').func('an22').set('plotfixedvalue', {'0' '0' '0'});
model.component('comp1').func('an22').set('plotargs', {'TTx' '0' '1'; 'c_Kx' '0' '1'; 'c_OHx' '0' '1'});

model.component('comp1').mesh.create('mesh8');

model.component('comp1').geom('geom4').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.component('comp1').geom('geom4').create('i6', 'Interval');
model.component('comp1').geom('geom4').feature('i6').label('1d points');
model.component('comp1').geom('geom4').feature('i6').set('coord', {'-height_GDL' '0' 'height_CL' 'height_CNPs +height_CL' 'height_CNPs + height_MEA +height_CL' 'height_CNPs + height_Ni +height_MEA +height_CL' 'height_CNPs + height_Ni +height_MEA +height_CL + height_elec'});
model.component('comp1').geom('geom4').run;
model.component('comp1').geom('geom4').run('fin');

model.frame('material1').tag('material4');
model.frame('mesh1').tag('mesh3');
model.frame('geometry1').tag('geometry3');
model.frame('spatial1').tag('spatial3');

model.component('comp1').variable.create('var18');
model.component('comp1').variable('var18').set('porosity_S_GDL', '1 - porosity_0_GDL');
model.component('comp1').variable('var18').set('porosity_L_GDL', 'porosity_0_GDL * Sl_GDL');
model.component('comp1').variable('var18').set('porosity_G_GDL', 'if(Sl_GDL<0.95, porosity_0_GDL * (1 - Sl_GDL), 0.02)');
model.component('comp1').variable('var18').set('porosity_S_CL', '1 - porosity_0_CL');
model.component('comp1').variable('var18').set('porosity_I_CL', 'porosity_0_CL * f_I_CL');
model.component('comp1').variable('var18').set('porosity_L_CL', 'if(Sl_CL>0.05, porosity_0_CL * (1 - f_I_CL) * Sl_CL, 0.02)');
model.component('comp1').variable('var18').set('porosity_G_CL', 'if(Sl_CL<0.95, porosity_0_CL * (1 - f_I_CL) * (1 - Sl_CL), 0.02)');
model.component('comp1').variable('var18').set('porosity_S_CNPs', '1 - porosity_0_CNPs');
model.component('comp1').variable('var18').set('porosity_I_CNPs', 'porosity_0_CNPs * f_I_CNPs');
model.component('comp1').variable('var18').set('porosity_L_CNPs', 'porosity_0_CNPs * (1 - f_I_CNPs) * Sl_CL');
model.component('comp1').variable('var18').set('porosity_G_CNPs', 'porosity_0_CNPs * (1 - f_I_CNPs) * (1 - Sl_CL)');
model.component('comp1').variable('var18').set('permea_sat_g_GDL', 'permea_0_GDL * ((porosity_G_GDL^3)/((1 - porosity_G_GDL)^2))');
model.component('comp1').variable('var18').set('permea_r_l_CL', '(1 - Sl_CL)^3');
model.component('comp1').variable('var18').set('permea_eff_g_GDL', 'permea_sat_g_GDL * permea_r_g_GDL');
model.component('comp1').variable('var18').set('permea_sat_g_CL', 'permea_0_CL * ((porosity_G_CL^3)/((1 - porosity_G_CL)^2))');
model.component('comp1').variable('var18').set('permea_eff_g_CL', 'permea_sat_g_CL * permea_r_g_CL');
model.component('comp1').variable('var18').set('permea_sat_CNPs', 'permea_0_CNPs * ((porosity_G_CNPs^3)/((1 - porosity_G_CNPs)^2))');
model.component('comp1').variable('var18').set('permea_eff_g_CNPs', 'permea_sat_CNPs * permea_r_g_CL');
model.component('comp1').variable('var18').set('permea_r_g_CL', '(1 - Sg_CL)^3');
model.component('comp1').variable('var18').set('av_CL2', '(1 - Sl_CL) * a_v_CL', 'intrinsic active specific surface area (Weng2020)');
model.component('comp1').variable('var18').set('delta_TFeq_CL', 'if(Sl_CL<0.95, 2[nm] * (1 - sqrt(1 - Sl_CL)), 5[nm])', '(1[nm])');
model.component('comp1').variable('var18').set('kMT_GL_CL', 'D_CO/delta_TFeq_CL');
model.component('comp1').variable('var18').set('delta_TFeq_CNPs', 'if(Sl_CL<0.95, pore_CNPs * (1 - sqrt(1 - Sl_CL)), 500[nm])');
model.component('comp1').variable('var18').set('kMT_GL_CNPs', 'D_CO/delta_TFeq_CNPs', 'adjust D_CO for ionomer effect');
model.component('comp1').variable('var18').set('av_CNPs2', '(1 - Sl_CL) * a_v_CNPs', 'intrinsic active specific surface area (Weng2020)');
model.component('comp1').variable('var18').set('Pc', 'pDarcy_g - pDarcy_l');
model.component('comp1').variable('var18').set('Sl_GDL', 's_lGDL(Pc)');
model.component('comp1').variable('var18').set('Sg_GDL', '1-Sl_GDL');
model.component('comp1').variable('var18').set('Sl_CL', 's_lCL(Pc)');
model.component('comp1').variable('var18').set('Sg_CL', '1-Sl_CL');
model.component('comp1').variable('var18').set('permea_r_l_GDL', '(1 - Sl_GDL)^3');
model.component('comp1').variable('var18').set('permea_r_g_GDL', '(1 - Sg_GDL)^3');
model.component('comp1').variable('var18').set('permea_sat_l_GDL', 'permea_0_GDL * ((porosity_L_GDL^3)/((1 - porosity_L_GDL)^2))');
model.component('comp1').variable('var18').set('permea_sat_l_CL', 'permea_0_CL * ((porosity_L_CL^3)/((1 - porosity_L_CL)^2))');
model.component('comp1').variable('var18').set('permea_eff_l_GDL', 'permea_sat_l_GDL * permea_r_l_GDL');
model.component('comp1').variable('var18').set('permea_eff_l_CL', 'permea_sat_l_CL * permea_r_l_CL');
model.component('comp1').variable('var18').set('av_GDL', '(1 - Sl_GDL) * a_v_GDL', 'intrinsic active specific surface area (Weng2020)');
model.component('comp1').variable('var18').set('M_A', 'tcs.Mn');
model.component('comp1').variable('var18').set('permea_eff_l_CNPs', 'permea_sat_l_CNPs * permea_r_l_CL');
model.component('comp1').variable('var18').set('permea_sat_g_CNPs', 'permea_0_CNPs * ((porosity_G_CNPs^3)/((1 - porosity_G_CNPs)^2))');
model.component('comp1').variable('var18').set('permea_sat_l_CNPs', 'permea_0_CNPs * ((porosity_L_CNPs^3)/((1 - porosity_L_CNPs)^2))');
model.component('comp1').variable('var18').set('RH_G', 'tcs.x_wH2Oj*pDarcy_g*100[%]/pvap');
model.component('comp1').variable.create('var8');
model.component('comp1').variable('var8').set('x_w', 'lambda_new/(1+lambda_new)');
model.component('comp1').variable('var8').set('eps_L', 'lambda_new*V_W/((lambda_new*V_W)+V_M)');
model.component('comp1').variable('var8').set('M_OH_M', '1/((1/M_OH)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_OH_w', '1/((1/M_OH)+(1/M_H2O))');
model.component('comp1').variable('var8').set('eta_OH', '(1/lambda_new)*((V_M/V_W)^2/3)*((M_OH_M/M_OH_w)^0.5)');
model.component('comp1').variable('var8').set('D_OH_AEM', 'eps_L*D_OH/(x_w*(1+eta_OH))');
model.component('comp1').variable('var8').set('M_H_M', '1/((1/M_H)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_H_w', '1/((1/M_H)+(1/M_H2O))');
model.component('comp1').variable('var8').set('eta_H', '(1/lambda_new)*((V_M/V_W)^2/3)*((M_H_M/M_H_w)^0.5)');
model.component('comp1').variable('var8').set('D_H_AEM', 'eps_L*D_H/(x_w*(1+eta_H))');
model.component('comp1').variable('var8').set('M_K_M', '1/((1/M_K)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_K_w', '1/((1/M_K)+(1/M_H2O))');
model.component('comp1').variable('var8').set('eta_K', '(1/lambda_new)*((V_M/V_W)^2/3)*((M_K_M/M_K_w)^0.5)');
model.component('comp1').variable('var8').set('D_K_AEM', 'eps_L*D_K/(x_w*(1+eta_K))');
model.component('comp1').variable('var8').set('M_CO_M', '1/((1/M_CO)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_CO_w', '1/((1/M_CO)+(1/M_H2O))');
model.component('comp1').variable('var8').set('D_CO_AEM', 'eps_L*D_CO/(x_w*(1+eta_CO))');
model.component('comp1').variable('var8').set('D_H2O_AEM', '(9e-17)*exp(5.9*aw_new)[(m^2)/s]', 'relationship from (Peng2018): (1*10^-6)[m^2/s]*exp(-17760*((1/303)-(1/(273+TT))))*(-1710-(250*lambda_new)-(4770*(lambda_new^2))+(1490*(lambda_new^3))-(49.5*(lambda_new^4)));      (9e-17)*exp(5.9*aw_new)[(cm^2)/s]');
model.component('comp1').variable('var8').set('M_HCO3_M', '1/((1/M_HCO3)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_HCO3_w', '1/((1/M_HCO3)+(1/M_H2O))');
model.component('comp1').variable('var8').set('M_CO3_M', '1/((1/M_CO3)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_CO3_w', '1/((1/M_CO3)+(1/M_H2O))');
model.component('comp1').variable('var8').set('M_CO2_M', '1/((1/M_CO2)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_CO2_w', '1/((1/M_CO2)+(1/M_H2O))');
model.component('comp1').variable('var8').set('M_H2CO3_M', '1/((1/M_H2CO3)+(1/M_AEM))');
model.component('comp1').variable('var8').set('M_H2CO3_w', '1/((1/M_H2CO3)+(1/M_H2O))');
model.component('comp1').variable('var8').set('lambda_new', '(30.75*((Cw/Cw_0)^3)-41.19*((Cw/Cw_0)^2)+21.14*(Cw/Cw_0))+(1/5)*(T-T_in)[1/K]');
model.component('comp1').variable('var8').set('aw_new', 'Cw/Cw_0');
model.component('comp1').variable('var8').set('eta_CO', '(1/lambda_new)*((V_M/V_W)^2/3)*((M_CO_M/M_CO_w)^0.5)');
model.component('comp1').variable('var8').set('aw_mem', 'aw_new');
model.component('comp1').variable('var8').set('aw_mem2', 'aw_new');
model.component('comp1').variable.create('var9');
model.component('comp1').variable('var9').set('R_H', '(k1f*cCO2b)-(k1r*cHb*cHCO3b)+(k2f*cHCO3b)-(k2r*cHb*cCO3b)');
model.component('comp1').variable('var9').set('R_OH', '-(k3f*cCO2b*cOHb)+(k3r*cHCO3b)-(k4f*cHCO3b*cOHb)+(k4r*cCO3b)');
model.component('comp1').variable('var9').set('R_CO2', '-(k1f*cCO2b)+(k1r*cHb*cHCO3b)-(k3f*cCO2b*cOHb)+(k3r*cHCO3b)');
model.component('comp1').variable('var9').set('R_HCO3', '(k1f*cCO2b)-(k1r*cHb*cHCO3b)-(k2f*cHCO3b)+(k2r*cHb*cCO3b)+(k3f*cCO2b*cOHb)-(k3r*cHCO3b)-(k4f*cHCO3b*cOHb)+(k4r*cCO3b)');
model.component('comp1').variable('var9').set('R_CO3', '(k2f*cHCO3b)-(k2r*cHb*cCO3b)+(k4f*cHCO3b*cOHb)-(k4r*cCO3b)');
model.component('comp1').variable('var9').set('R_OH_w', 'kwf_web-(kwr_web*cHb*cOHb)');
model.component('comp1').variable('var9').set('R_H_w', 'kwf_web-(kwr_web*cHb*cOHb)');
model.component('comp1').variable('var9').set('KH2O', '10^(-(29.3868-0.0737549*T[1/K]+7.47881e-5*(T[1/K])^2))', 'Not used but could be valuable; Equilibrium constant for water dissociation');
model.component('comp1').variable.create('var17');
model.component('comp1').variable('var17').set('i0_H2_old', 'i0_H2 * exp(-(0.01[eV]*pH_CL)/(k_B_const*T))', '6* 10*');
model.component('comp1').variable('var17').set('i0_CO', '2* 1e-2* 2.6[mA/cm^2]* i0_Ramp', 'not used');
model.component('comp1').variable('var17').set('i0_CH4', '(8.5e-18)[mA/cm^2]* i0_Ramp *exp(-(0.02[eV]*pH)/(k_B_const*T))', 'not used');
model.component('comp1').variable('var17').set('aw_Ramp', 'aw_ct', 'aw_Ramp2 * we.aw');
model.component('comp1').variable('var17').set('pH_CL', 'if(cHb>0,-log10(cHb*1[1/M]),pH_in)', 'if(cOHb>0,-log10(Kw/cOHb*1[1/M]),pH)');
model.component('comp1').variable('var17').set('E_O2x2', 'E_O2_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_H2x_1', 'E_H2_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_C2H4x_1', 'E_C2H4_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_COx', 'E_CO_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_AcOx_1', 'E_AcO_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_CH4x', 'E_CH4_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_EtOHx_1', 'E_EtOH_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('E_PrOHx_1', 'E_PrOH_0 - ((2.303*R_const*T/F_const)*(pH_CL))');
model.component('comp1').variable('var17').set('i0_O2_B', '(1.6*10^-6)[mA/cm^2]*10*exp(-(0.01[eV]*pH_CL)/(k_B_const*T))');
model.component('comp1').variable('var17').set('i0_O2_A', '(1.2*10^-8)[mA/cm^2]*0.1*exp(-(0.01[eV]*pH_CL)/(k_B_const*T))');
model.component('comp1').variable('var17').set('aw_ct', 'aw_mem', 'if(pDarcy_g<=0, 1,aw_mem)');
model.component('comp1').variable('var17').set('alpha_H2', 'alpha_H2_0/alpha_Ramp');
model.component('comp1').variable('var17').set('alpha_C2H4', 'alpha_C2H4_0/alpha_Ramp');
model.component('comp1').variable('var17').set('alpha_AcO', 'alpha_AcO_0/alpha_Ramp');
model.component('comp1').variable('var17').set('alpha_EtOH', 'alpha_EtOH_0/alpha_Ramp');
model.component('comp1').variable('var17').set('alpha_PrOH', 'alpha_PrOH_0/alpha_Ramp');
model.component('comp1').variable('var17').set('conc_H2O', 'aw_ct');
model.component('comp1').variable('var17').set('COnorm2', 'if(cCOb>eps^2,cCOb/1[mM],eps^2)', 'if(cCOb>eps^2,cCOb/(1[atm] *c_CO_sat_2(298.15,1[M],1[M])),eps^2)');
model.component('comp1').variable.create('var7');
model.component('comp1').variable('var7').set('x_H2O_in', '(10^(8.07-(1730.63/(Temp2[1/K]-39.724))))[mmHg]/pressure_in', 'Only used as the initial condition in TCS (it doesn''t converge without it)');
model.component('comp1').variable('var7').set('D_OH', '(2.89e-5)*1[cm^2/s]*exp(-1750*((1/TT)-(1/273)))', 'Weng2019');
model.component('comp1').variable('var7').set('D_CO', '1.185*(1e-6)[m^2/s]*exp(-16.16[kJ/mol]/(N_A_const*k_B_const*T))', '(Poud2014)');
model.component('comp1').variable('var7').set('D_H', '(4.49e-5)*1[cm^2/s]*exp(-1430*((1/TT)-(1/273)))', 'Weng2019');
model.component('comp1').variable('var7').set('D_K', '(1.96e-5)*1[cm^2/s]*exp(-2300*((1/TT)-(1/298)))', 'Weng2019');
model.component('comp1').variable('var7').set('D_CO_H2O', '1[cm^2/s]*((10^-3)*(TT^1.75)*(((1/MM_CO)+(1/MM_H2O))^0.5))/(PP*(((vp_CO^1/3)+(vp_H2O^1/3))^2))');
model.component('comp1').variable('var7').set('D_H2O_H2', '1[cm^2/s]*((10^-3)*(TT^1.75)*(((1/MM_H2)+(1/MM_H2O))^0.5))/(PP*(((vp_H2^1/3)+(vp_H2O^1/3))^2))');
model.component('comp1').variable('var7').set('pvap', '(10^(8.07-(1730.63/(TT-39.724))))[mmHg]', '(Weng2019); (10^(8.07-(1730.63/(Temp2[1/K]-39.724))))[mmHg]');
model.component('comp1').variable('var7').set('psat', '610.7[Pa]*(10^((7.5*(TT-273.15))/(TT-35.85)))', '610.7[Pa]*(10^((7.5*(Temp2[1/K]-273.15))/(Temp2[1/K]-35.85)))');
model.component('comp1').variable('var7').set('Sech_h_G', 'Sech_h_G0+(Sech_h_T*(T-298.15[K])*1[1/K])');
model.component('comp1').variable('var7').set('TF', '(T-0[degC])/1[K]*1.8+32', 'Operating temperature in Fahrenheit');
model.component('comp1').variable('var7').set('TT', 'T/1[K]');
model.component('comp1').variable('var7').set('T', 'Temp2');
model.component('comp1').variable.create('var14');
model.component('comp1').variable('var14').set('ik_H2', 'tcd.iv_per1');
model.component('comp1').variable('var14').set('Pk_H2', '13[mV]');
model.component('comp1').variable('var14').set('eta_H2', 'tcd.eta_per1');
model.component('comp1').variable('var14').set('qct_H2', '(ik_H2*eta_H2)+(ik_H2*Pk_H2)');
model.component('comp1').variable('var14').set('ik_C2H4', 'tcd.iv_per2');
model.component('comp1').variable('var14').set('Pk_C2H4', '-123[mV]');
model.component('comp1').variable('var14').set('Pk_CO', '38[mV]');
model.component('comp1').variable('var14').set('Pk_HCOO', '-104[mV]');
model.component('comp1').variable('var14').set('Pk_EtOH', '-123[mV]');
model.component('comp1').variable('var14').set('Pk_PrOH', '-135[mV]');
model.component('comp1').variable('var14').set('ik_HCOO', 'tcd.iv_per4');
model.component('comp1').variable('var14').set('ik_EtOH', 'tcd.iv_per6');
model.component('comp1').variable('var14').set('ik_PrOH', 'tcd.iv_per7');
model.component('comp1').variable('var14').set('eta_C2H4', 'tcd.eta_per2');
model.component('comp1').variable('var14').set('eta_HCOO', 'tcd.eta_per4');
model.component('comp1').variable('var14').set('eta_EtOH', 'tcd.eta_per6');
model.component('comp1').variable('var14').set('eta_PrOH', 'tcd.eta_per7');
model.component('comp1').variable('var14').set('qct_C2H4', '(ik_C2H4*eta_C2H4)+(ik_C2H4*Pk_C2H4)');
model.component('comp1').variable('var14').set('qct_HCOO', '(ik_HCOO*eta_HCOO)+(ik_HCOO*Pk_HCOO)');
model.component('comp1').variable('var14').set('qct_EtOH', '(ik_EtOH*eta_EtOH)+(ik_EtOH*Pk_EtOH)', 'Peltier coeff of CH4 not given in (Weng2020)');
model.component('comp1').variable('var14').set('qct_PrOH', '(ik_PrOH*eta_PrOH)+(ik_PrOH*Pk_PrOH)', 'Peltier coeff of CH4 not given in (Weng2020)');
model.component('comp1').variable('var14').set('qb_w', '55.84[kJ/mol] *(Rwf - Rwr)');
model.component('comp1').variable('var14').set('qb_1', '7.64[kJ/mol] *(R1f - R1r)');
model.component('comp1').variable('var14').set('qb_2', '14.85[kJ/mol] *(R2f - R2r)');
model.component('comp1').variable('var14').set('qpt', 'H_vap(T)');
model.component('comp1').variable('var14').set('R1f', 'k1f*cCO2b');
model.component('comp1').variable('var14').set('R1r', 'k1r*cHb*cHCO3b');
model.component('comp1').variable('var14').set('R2f', 'k2f*cHCO3b');
model.component('comp1').variable('var14').set('R2r', 'k2r*cHb*cCO3b');
model.component('comp1').variable('var14').set('Rwf', 'kwf_web');
model.component('comp1').variable('var14').set('Rwr', '(kwr_web*cHb*cOHb)');
model.component('comp1').variable('var14').set('qct_O2', '(ik_O2*eta_O2) +(ik_O2*Pk_O2)');
model.component('comp1').variable('var14').set('Pk_O2', '240[mV]');
model.component('comp1').variable('var14').set('ik_O2', 'tcd.iv_per1');
model.component('comp1').variable('var14').set('eta_O2', 'tcd.eta_per1');
model.component('comp1').variable.create('var5');
model.component('comp1').variable('var5').set('pL_mem', '((Cw/Cw_0)*1[atm])', '((mu_w - (R_const*T*log(aw_mem2)))/V_W)+1[atm] back-calculated from eq22 in (Weng2020)');
model.component('comp1').variable('var5').set('transport_V_298', '(8*10^-14)[(mol^2)/(J*cm*s)]*exp(11.47*aw_mem2)', 'update water activity');
model.component('comp1').variable('var5').set('transport_V_350', '(2.3*10^-13)[(mol^2)/(J*cm*s)]*exp(11.47*aw_mem2)');
model.component('comp1').variable('var5').set('transport_L', '100*(8*10^-14)[(mol^2)/(J*cm*s)]*exp(11.47*maxop1(aw_mem2))');
model.component('comp1').variable('var5').set('SM', 's_lAEM(pL_mem)');
model.component('comp1').variable('var5').set('transport_eff', '(SM*transport_L)+((1-SM)*if(T<350[K],transport_V_298,transport_V_350))');
model.component('comp1').variable('var5').set('EOC_V', '0.61');
model.component('comp1').variable('var5').set('EOC_L', '3');
model.component('comp1').variable('var5').set('EOC_eff', '(SM*EOC_L)+((1-SM)*EOC_V)');
model.component('comp1').variable('var5').set('sigma_V_298', '0.003[S/m]*exp(8.14*aw_mem2)');
model.component('comp1').variable('var5').set('sigma_L', '2*sigma_V_298');
model.component('comp1').variable('var5').set('sigma_eff', '(SM*sigma_L)+((1-SM)*if(T<350[K],sigma_V_298,sigma_V_350))', 'effective membrane conductivity');
model.component('comp1').variable('var5').set('lambda_V_298', '(30.75*(aw_mem2^3))-(41.19*(aw_mem2^2))+(21.14*aw_mem2)');
model.component('comp1').variable('var5').set('lambda_L', 'lambda_AEM');
model.component('comp1').variable('var5').set('lambda_eff', '(SM*lambda_L)+((1-SM)*if(T<350[K],lambda_V_298,lambda_V_350))');
model.component('comp1').variable('var5').set('f_AEM', 'lambda_eff*V_W/((lambda_eff*V_W)+V_M)');
model.component('comp1').variable('var5').set('lambda_V_350', '(21.9*(aw_mem2^3))-(20.6*(aw_mem2^2))+(8.35*aw_mem2)');
model.component('comp1').variable('var5').set('sigma_V_350', '0.006[S/m]*exp(6.21*aw_mem2)');

model.component('comp1').view('view1').tag('view11');

model.component('comp1').cpl.create('maxop1', 'Maximum');
model.component('comp1').cpl('maxop1').selection.set([4]);

model.component('comp1').physics.create('tds', 'DilutedSpecies', 'geom4');
model.component('comp1').physics('tds').field('concentration').field('cCOb');
model.component('comp1').physics('tds').field('concentration').component({'cCOb'});
model.component('comp1').physics('tds').selection.set([2 3]);
model.component('comp1').physics('tds').create('porous2', 'PorousMedium', 1);
model.component('comp1').physics('tds').feature('porous2').selection.set([2]);
model.component('comp1').physics('tds').create('porous3', 'PorousMedium', 1);
model.component('comp1').physics('tds').feature('porous3').selection.set([3]);
model.component('comp1').physics('tds').create('pec1', 'PorousElectrodeCoupling', 1);
model.component('comp1').physics('tds').feature('pec1').selection.set([2]);
model.component('comp1').physics('tds').feature('pec1').create('rc2', 'ReactionCoefficients', 1);
model.component('comp1').physics('tds').feature('pec1').create('rc3', 'ReactionCoefficients', 1);
model.component('comp1').physics('tds').feature('pec1').create('rc4', 'ReactionCoefficients', 1);
model.component('comp1').physics('tds').create('reac1', 'Reactions', 1);
model.component('comp1').physics('tds').feature('reac1').selection.set([2]);
model.component('comp1').physics('tds').create('reac5', 'Reactions', 1);
model.component('comp1').physics('tds').feature('reac5').selection.set([3]);
model.component('comp1').physics.create('tcd', 'TertiaryCurrentDistributionNernstPlanck', 'geom4');
model.component('comp1').physics('tcd').field('concentration').field('cKb');
model.component('comp1').physics('tcd').field('concentration').component({'cKb' 'cOHb' 'cHb'});
model.component('comp1').physics('tcd').selection.set([2 3 4 5 6]);
model.component('comp1').physics('tcd').create('pce1', 'PorousElectrode', 1);
model.component('comp1').physics('tcd').feature('pce1').selection.set([2]);
model.component('comp1').physics('tcd').feature('pce1').create('per2', 'PorousElectrodeReaction', 1);
model.component('comp1').physics('tcd').feature('pce1').create('per4', 'PorousElectrodeReaction', 1);
model.component('comp1').physics('tcd').feature('pce1').create('per6', 'PorousElectrodeReaction', 1);
model.component('comp1').physics('tcd').feature('pce1').create('per7', 'PorousElectrodeReaction', 1);
model.component('comp1').physics('tcd').create('pce2', 'PorousElectrode', 1);
model.component('comp1').physics('tcd').feature('pce2').selection.set([3]);
model.component('comp1').physics('tcd').create('iem1', 'IonExchangeMembrane', 1);
model.component('comp1').physics('tcd').feature('iem1').selection.set([4]);
model.component('comp1').physics('tcd').create('pce3', 'PorousElectrode', 1);
model.component('comp1').physics('tcd').feature('pce3').selection.set([5]);
model.component('comp1').physics('tcd').feature('pce3').create('per2', 'PorousElectrodeReaction', 1);
model.component('comp1').physics('tcd').create('pot1', 'ElectricPotential', 0);
model.component('comp1').physics('tcd').feature('pot1').selection.set([2]);
model.component('comp1').physics('tcd').create('egnd1', 'ElectricGround', 0);
model.component('comp1').physics('tcd').feature('egnd1').selection.set([6]);
model.component('comp1').physics('tcd').create('reac10', 'Reactions', 1);
model.component('comp1').physics('tcd').feature('reac10').selection.set([1 2 3 4 5 6]);
model.component('comp1').physics('tcd').create('in1', 'Inflow', 0);
model.component('comp1').physics('tcd').feature('in1').selection.set([7]);
model.component('comp1').physics('tcd').create('conc1', 'Concentration', 0);
model.component('comp1').physics('tcd').feature('conc1').selection.set([2]);
model.component('comp1').physics.create('dll', 'PorousMediaFlowDarcy', 'geom4');
model.component('comp1').physics('dll').identifier('dll');
model.component('comp1').physics('dll').field('pressure').field('pDarcy_l');
model.component('comp1').physics('dll').selection.set([1 2 3]);
model.component('comp1').physics('dll').create('porous2', 'PorousMedium', 1);
model.component('comp1').physics('dll').feature('porous2').selection.set([2]);
model.component('comp1').physics('dll').create('porous3', 'PorousMedium', 1);
model.component('comp1').physics('dll').feature('porous3').selection.set([3]);
model.component('comp1').physics('dll').create('pr1', 'Pressure', 0);
model.component('comp1').physics('dll').feature('pr1').selection.set([1]);
model.component('comp1').physics('dll').create('ms2', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms2').selection.set([2]);
model.component('comp1').physics('dll').create('ms10', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms10').selection.set([3]);
model.component('comp1').physics('dll').create('ms4', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms4').selection.set([1]);
model.component('comp1').physics('dll').create('ms9', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms9').selection.set([2]);
model.component('comp1').physics('dll').create('ms11', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms11').selection.set([3]);
model.component('comp1').physics('dll').create('ms5', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms5').selection.set([2]);
model.component('comp1').physics('dll').create('ms12', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms12').selection.set([3]);
model.component('comp1').physics('dll').create('ms6', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms6').selection.set([1]);
model.component('comp1').physics('dll').create('mf4', 'MassFlux', 0);
model.component('comp1').physics('dll').feature('mf4').selection.set([4]);
model.component('comp1').physics('dll').create('ms13', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms13').selection.set([2]);
model.component('comp1').physics('dll').create('ms14', 'MassSource', 1);
model.component('comp1').physics('dll').feature('ms14').selection.set([3]);
model.component('comp1').physics.create('dlg', 'DarcysLaw', 'geom4');
model.component('comp1').physics('dlg').identifier('dlg');
model.component('comp1').physics('dlg').field('pressure').field('pDarcy_g');
model.component('comp1').physics('dlg').selection.set([1 2 3]);
model.component('comp1').physics('dlg').create('porous1', 'PorousMedium', 1);
model.component('comp1').physics('dlg').create('pr1', 'Pressure', 0);
model.component('comp1').physics('dlg').feature('pr1').selection.set([1]);
model.component('comp1').physics('dlg').create('porous3', 'PorousMedium', 1);
model.component('comp1').physics('dlg').feature('porous3').selection.set([2]);
model.component('comp1').physics('dlg').create('porous4', 'PorousMedium', 1);
model.component('comp1').physics('dlg').feature('porous4').selection.set([3]);
model.component('comp1').physics('dlg').create('ms1', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms1').selection.set([2]);
model.component('comp1').physics('dlg').create('ms4', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms4').selection.set([3]);
model.component('comp1').physics('dlg').create('ms2', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms2').selection.set([2]);
model.component('comp1').physics('dlg').create('ms3', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms3').selection.set([3]);
model.component('comp1').physics('dlg').create('ms12', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms12').selection.set([2]);
model.component('comp1').physics('dlg').create('ms19', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms19').selection.set([3]);
model.component('comp1').physics('dlg').create('ms17', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms17').selection.set([1]);
model.component('comp1').physics('dlg').create('ms15', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms15').selection.set([2]);
model.component('comp1').physics('dlg').create('ms20', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms20').selection.set([3]);
model.component('comp1').physics('dlg').create('ms18', 'MassSource', 1);
model.component('comp1').physics('dlg').feature('ms18').selection.set([1]);
model.component('comp1').physics.create('tcs', 'ConcentratedSpecies', 'geom4');
model.component('comp1').physics('tcs').field('massfraction').field('wH2j');
model.component('comp1').physics('tcs').field('massfraction').component({'wH2j' 'wCOj' 'wH2Oj' 'wC2H4j' 'wN2j'});
model.component('comp1').physics('tcs').selection.set([1 2 3]);
model.component('comp1').physics('tcs').create('porousKn1', 'PorousMedium', 1);
model.component('comp1').physics('tcs').feature('porousKn1').selection.all;
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').selection.set([]);
model.component('comp1').physics('tcs').feature('porousKn1').feature('pm1').selection.set([]);
model.component('comp1').physics('tcs').create('mf1', 'MassFraction', 0);
model.component('comp1').physics('tcs').feature('mf1').selection.set([1]);
model.component('comp1').physics('tcs').create('porous1', 'PorousMedium', 1);
model.component('comp1').physics('tcs').feature('porous1').selection.set([1]);
model.component('comp1').physics('tcs').create('porous2', 'PorousMedium', 1);
model.component('comp1').physics('tcs').feature('porous2').selection.set([2]);
model.component('comp1').physics('tcs').create('porous3', 'PorousMedium', 1);
model.component('comp1').physics('tcs').feature('porous3').selection.set([3]);
model.component('comp1').physics('tcs').create('reac13', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac13').selection.set([2]);
model.component('comp1').physics('tcs').create('reac1', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac1').selection.set([2]);
model.component('comp1').physics('tcs').create('reac5', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac5').selection.set([3]);
model.component('comp1').physics('tcs').create('reac15', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac15').selection.set([3]);
model.component('comp1').physics('tcs').create('reac11', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac11').selection.set([2]);
model.component('comp1').physics('tcs').create('reac6', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac6').selection.set([3]);
model.component('comp1').physics('tcs').create('reac14', 'ReactionSources', 1);
model.component('comp1').physics('tcs').feature('reac14').selection.set([1]);
model.component('comp1').physics('tcs').create('in1', 'Inflow', 0);
model.component('comp1').physics('tcs').feature('in1').selection.set([1]);
model.component('comp1').physics.create('ht3', 'PorousMediaHeatTransfer', 'geom4');
model.component('comp1').physics('ht3').identifier('ht3');
model.component('comp1').physics('ht3').field('temperature').field('Temp2');
model.component('comp1').physics('ht3').create('temp1', 'TemperatureBoundary', 0);
model.component('comp1').physics('ht3').feature('temp1').selection.set([1]);
model.component('comp1').physics('ht3').create('temp2', 'TemperatureBoundary', 0);
model.component('comp1').physics('ht3').feature('temp2').selection.set([7]);
model.component('comp1').physics('ht3').create('porous2', 'PorousMediumHeatTransferModel', 1);
model.component('comp1').physics('ht3').feature('porous2').selection.set([2 4 5 6]);
model.component('comp1').physics('ht3').create('porous3', 'PorousMediumHeatTransferModel', 1);
model.component('comp1').physics('ht3').feature('porous3').selection.set([3 4 5 6]);
model.component('comp1').physics('ht3').create('solid1', 'SolidHeatTransferModel', 1);
model.component('comp1').physics('ht3').feature('solid1').selection.set([4]);
model.component('comp1').physics('ht3').create('fluid1', 'FluidHeatTransferModel', 1);
model.component('comp1').physics('ht3').feature('fluid1').selection.set([6]);
model.component('comp1').physics('ht3').create('solid5', 'SolidHeatTransferModel', 1);
model.component('comp1').physics('ht3').feature('solid5').selection.set([5]);
model.component('comp1').physics('ht3').create('porous4', 'PorousMediumHeatTransferModel', 1);
model.component('comp1').physics('ht3').feature('porous4').selection.set([5]);
model.component('comp1').physics('ht3').create('hs2', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs2').selection.set([2]);
model.component('comp1').physics('ht3').create('hs6', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs6').selection.set([3]);
model.component('comp1').physics('ht3').create('hs3', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs3').selection.set([2 3 4 5 6]);
model.component('comp1').physics('ht3').create('hs1', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs1').selection.set([1 2 3]);
model.component('comp1').physics('ht3').create('hs4', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs4').selection.set([2 3]);
model.component('comp1').physics('ht3').create('hs5', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs5').selection.set([5]);
model.component('comp1').physics('ht3').create('hs7', 'HeatSource', 1);
model.component('comp1').physics('ht3').feature('hs7').selection.set([5]);
model.component('comp1').physics.create('c2', 'CoefficientFormPDE', 'geom4');
model.component('comp1').physics('c2').identifier('c2');
model.component('comp1').physics('c2').field('dimensionless').field('Cw');
model.component('comp1').physics('c2').field('dimensionless').component({'Cw'});
model.component('comp1').physics('c2').prop('Units').set('DependentVariableQuantity', 'none');
model.component('comp1').physics('c2').prop('Units').set('CustomDependentVariableUnit', 'mol/(m^3)');
model.component('comp1').physics('c2').selection.set([2 3 4]);
model.component('comp1').physics('c2').create('dir1', 'DirichletBoundary', 0);
model.component('comp1').physics('c2').feature('dir1').selection.set([5]);
model.component('comp1').physics('c2').create('cfeq2', 'CoefficientFormPDE', 1);
model.component('comp1').physics('c2').feature('cfeq2').selection.set([1 2 5 6]);
model.component('comp1').physics('c2').create('cfeq3', 'CoefficientFormPDE', 1);
model.component('comp1').physics('c2').feature('cfeq3').selection.set([1 3 5 6]);

model.component('comp1').mesh('mesh8').create('edg1', 'Edge');
model.component('comp1').mesh('mesh8').create('edg2', 'Edge');
model.component('comp1').mesh('mesh8').create('edg3', 'Edge');
model.component('comp1').mesh('mesh8').create('edg4', 'Edge');
model.component('comp1').mesh('mesh8').create('edg5', 'Edge');
model.component('comp1').mesh('mesh8').create('edg6', 'Edge');
model.component('comp1').mesh('mesh8').feature('edg1').selection.geom('geom4', 1);
model.component('comp1').mesh('mesh8').feature('edg1').selection.set([1]);
model.component('comp1').mesh('mesh8').feature('edg1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh8').feature('edg1').create('size1', 'Size');
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').selection.geom('geom4', 0);
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').selection.set([1 2]);
model.component('comp1').mesh('mesh8').feature('edg2').selection.geom('geom4', 1);
model.component('comp1').mesh('mesh8').feature('edg2').selection.set([2]);
model.component('comp1').mesh('mesh8').feature('edg2').create('dis2', 'Distribution');
model.component('comp1').mesh('mesh8').feature('edg2').create('size1', 'Size');
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').selection.geom('geom4', 0);
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').selection.set([2 3]);
model.component('comp1').mesh('mesh8').feature('edg3').selection.geom('geom4', 1);
model.component('comp1').mesh('mesh8').feature('edg3').selection.set([3]);
model.component('comp1').mesh('mesh8').feature('edg3').create('dis2', 'Distribution');
model.component('comp1').mesh('mesh8').feature('edg3').create('size1', 'Size');
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').selection.geom('geom4', 0);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').selection.set([3]);
model.component('comp1').mesh('mesh8').feature('edg4').selection.geom('geom4', 1);
model.component('comp1').mesh('mesh8').feature('edg4').selection.set([4]);
model.component('comp1').mesh('mesh8').feature('edg4').create('dis2', 'Distribution');
model.component('comp1').mesh('mesh8').feature('edg4').create('size1', 'Size');
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').selection.geom('geom4', 0);
model.component('comp1').mesh('mesh8').feature('edg5').selection.geom('geom4', 1);
model.component('comp1').mesh('mesh8').feature('edg5').selection.set([5]);
model.component('comp1').mesh('mesh8').feature('edg5').create('dis2', 'Distribution');
model.component('comp1').mesh('mesh8').feature('edg5').create('size1', 'Size');
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').selection.set([]);
model.component('comp1').mesh('mesh8').feature('edg6').selection.geom('geom4', 1);
model.component('comp1').mesh('mesh8').feature('edg6').selection.set([6]);
model.component('comp1').mesh('mesh8').feature('edg6').create('dis2', 'Distribution');

model.component('comp1').probe.create('dom1', 'Domain');
model.component('comp1').probe.create('dom2', 'Domain');
model.component('comp1').probe.create('dom3', 'Domain');
model.component('comp1').probe.create('dom4', 'Domain');
model.component('comp1').probe.create('dom5', 'Domain');
model.component('comp1').probe.create('dom6', 'Domain');
model.component('comp1').probe.create('dom7', 'Domain');
model.component('comp1').probe.create('dom8', 'Domain');
model.component('comp1').probe('dom1').selection.set([2]);
model.component('comp1').probe('dom2').selection.set([3]);
model.component('comp1').probe('dom3').selection.set([2]);
model.component('comp1').probe('dom4').selection.set([2]);
model.component('comp1').probe('dom5').selection.set([2]);
model.component('comp1').probe('dom6').selection.set([2]);
model.component('comp1').probe('dom7').selection.set([2 3]);
model.component('comp1').probe('dom8').selection.set([2 3]);

model.result.table('tbl3').label('Probe Table 3');
model.result.table('tbl4').comments('Partial & total CDs - CL');
model.result.table('tbl5').comments('Partial CD - CL & CNPs - H2');
model.result.table('tbl6').comments('iT');
model.result.table('tbl7').comments('kinetic M2 - CL');
model.result.table('tbl8').comments('kinetic M2 H2 - CL & CNPs');
model.result.table('tbl9').comments('kinetic M2 - anode');
model.result.table('tbl10').comments('ohmic portion - CL+CNPs+AEM');
model.result.table('tbl11').comments('ohmic portion - anode and anolyte');
model.result.table('tbl12').comments('MT M2 - CL');
model.result.table('tbl13').comments('MT M2 H2 - CL & CNPs');
model.result.table('tbl14').comments('MT M2 - anode');

model.thermodynamics.label('Thermodynamics Package');

model.component('comp1').variable('var18').label('Saturation-related');
model.component('comp1').variable('var8').label('Membrane-related');
model.component('comp1').variable('var9').label('Equilibrium reactions');
model.component('comp1').variable('var17').label('Butler-Volmer');
model.component('comp1').variable('var7').label('Temperature-related');
model.component('comp1').variable('var14').label('Heat transfer');
model.component('comp1').variable('var5').active(false);
model.component('comp1').variable('var5').label('Vapor/Liquid equilibrated membrane - only used if replaced in "Membrane-related variables" & the PDE');

model.component('comp1').view('view11').label('View 11');
model.component('comp1').view('view11').axis.set('xmin', -115.10899353027344);
model.component('comp1').view('view11').axis.set('xmax', 217.2889862060547);

model.common('cminpt').label('Common model inputs 1');
model.common('cminpt').set('modified', {'temperature' 'T_in'; 'pressure' '0[atm]'});

model.component('comp1').physics('tds').label('Transport of Diluted Species COliq');
model.component('comp1').physics('tds').prop('Ac').set('Ac', 'cell_area');
model.component('comp1').physics('tds').prop('TransportMechanism').set('Convection', false);
model.component('comp1').physics('tds').prop('TransportMechanism').set('MassTransferInPorousMedia', true);
model.component('comp1').physics('tds').feature('sp1').label('Species Properties');
model.component('comp1').physics('tds').feature('cdm1').set('DiffusionCoefficientSource', 'chem');
model.component('comp1').physics('tds').feature('cdm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tds').feature('cdm1').set('minput_temperature', 'T');
model.component('comp1').physics('tds').feature('cdm1').set('D_cCOb', {'D_CO'; '0'; '0'; '0'; 'D_CO'; '0'; '0'; '0'; 'D_CO'});
model.component('comp1').physics('tds').feature('cdm1').set('Dchem_cCOb', {'D_CO'; '0'; '0'; '0'; 'D_CO'; '0'; '0'; '0'; 'D_CO'});
model.component('comp1').physics('tds').feature('init1').set('initc', 'c_CO_Henry');
model.component('comp1').physics('tds').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('tds').feature('dcont1').label('Continuity');
model.component('comp1').physics('tds').feature('porous2').label('Porous Medium CL');
model.component('comp1').physics('tds').feature('porous2').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.component('comp1').physics('tds').feature('porous2').feature('fluid1').set('FluidDiffusivityModelType', 'BruggemanModel');
model.component('comp1').physics('tds').feature('porous2').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tds').feature('porous2').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('tds').feature('porous2').feature('fluid1').set('DF_cCOb', {'D_CO'; '0'; '0'; '0'; 'D_CO'; '0'; '0'; '0'; 'D_CO'});
model.component('comp1').physics('tds').feature('porous2').feature('fluid1').set('Dchem_cCOb', {'D_CO'; '0'; '0'; '0'; '1e-9[m^2/s]'; '0'; '0'; '0'; '1e-9[m^2/s]'});
model.component('comp1').physics('tds').feature('porous2').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('tds').feature('porous2').feature('pm1').set('poro', 'if(porosity_I_CL==0,porosity_L_CL,porosity_I_CL)');
model.component('comp1').physics('tds').feature('porous3').label('Porous Medium CNPs');
model.component('comp1').physics('tds').feature('porous3').feature('fluid1').set('DiffusionCoefficientSource', 'chem');
model.component('comp1').physics('tds').feature('porous3').feature('fluid1').set('FluidDiffusivityModelType', 'BruggemanModel');
model.component('comp1').physics('tds').feature('porous3').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tds').feature('porous3').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('tds').feature('porous3').feature('fluid1').set('DF_cCOb', {'D_CO'; '0'; '0'; '0'; 'D_CO'; '0'; '0'; '0'; 'D_CO'});
model.component('comp1').physics('tds').feature('porous3').feature('fluid1').set('Dchem_cCOb', {'D_CO'; '0'; '0'; '0'; '1e-9[m^2/s]'; '0'; '0'; '0'; '1e-9[m^2/s]'});
model.component('comp1').physics('tds').feature('porous3').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('tds').feature('porous3').feature('pm1').set('poro', 'if(porosity_I_CNPs==0,porosity_L_CNPs,porosity_I_CNPs)');
model.component('comp1').physics('tds').feature('pec1').label('Porous Electrode Coupling CL - CO consumption');
model.component('comp1').physics('tds').feature('pec1').feature('rc1').set('iv_src', 'root.comp1.tcd.pce1.per2.iv');
model.component('comp1').physics('tds').feature('pec1').feature('rc1').set('iv', '-current_density * a_v * FE_C2');
model.component('comp1').physics('tds').feature('pec1').feature('rc1').set('nm', 8);
model.component('comp1').physics('tds').feature('pec1').feature('rc1').set('Vi', -2);
model.component('comp1').physics('tds').feature('pec1').feature('rc1').label('Reaction Coefficients - C2H4');
model.component('comp1').physics('tds').feature('pec1').feature('rc2').set('iv_src', 'root.comp1.tcd.pce1.per4.iv');
model.component('comp1').physics('tds').feature('pec1').feature('rc2').set('iv', '-current_density * a_v * FE_C2');
model.component('comp1').physics('tds').feature('pec1').feature('rc2').set('nm', 4);
model.component('comp1').physics('tds').feature('pec1').feature('rc2').set('Vi', -2);
model.component('comp1').physics('tds').feature('pec1').feature('rc2').label('Reaction Coefficients - AcO');
model.component('comp1').physics('tds').feature('pec1').feature('rc3').set('iv_src', 'root.comp1.tcd.pce1.per6.iv');
model.component('comp1').physics('tds').feature('pec1').feature('rc3').set('iv', '-current_density * a_v * FE_C2');
model.component('comp1').physics('tds').feature('pec1').feature('rc3').set('nm', 8);
model.component('comp1').physics('tds').feature('pec1').feature('rc3').set('Vi', -2);
model.component('comp1').physics('tds').feature('pec1').feature('rc3').label('Reaction Coefficients - EtOH');
model.component('comp1').physics('tds').feature('pec1').feature('rc4').set('iv_src', 'root.comp1.tcd.pce1.per7.iv');
model.component('comp1').physics('tds').feature('pec1').feature('rc4').set('iv', '-current_density * a_v * FE_C2');
model.component('comp1').physics('tds').feature('pec1').feature('rc4').set('nm', 12);
model.component('comp1').physics('tds').feature('pec1').feature('rc4').set('Vi', -3);
model.component('comp1').physics('tds').feature('pec1').feature('rc4').label('Reaction Coefficients - PrOH');
model.component('comp1').physics('tds').feature('reac1').set('R_cCOb', 'kMT_GL_CL * (tcs.p_wCOj *c_CO_sat_2(T[1/K],cKb,cOHb) - cCOb) * av_CL2');
model.component('comp1').physics('tds').feature('reac1').label('Reactions - CO Dissolution - CL (with Sechenov)');
model.component('comp1').physics('tds').feature('reac5').set('R_cCOb', 'kMT_GL_CNPs * (tcs.p_wCOj *c_CO_sat_2(T[1/K],cKb,cOHb) - cCOb) * av_CNPs2');
model.component('comp1').physics('tds').feature('reac5').label('Reactions - CO Dissolution - CNPs (with Sechenov)');
model.component('comp1').physics('tcd').label('Tertiary Current Distribution, Coupled TCD');
model.component('comp1').physics('tcd').prop('Ac').set('Ac', 'cell_area');
model.component('comp1').physics('tcd').feature('sp1').set('z', [1; -1; 1]);
model.component('comp1').physics('tcd').feature('sp1').label('Species Charges');
model.component('comp1').physics('tcd').feature('ice1').set('epsilonr_mat', 'from_mat');
model.component('comp1').physics('tcd').feature('ice1').set('epsilonr', [1; 0; 0; 0; 1; 0; 0; 0; 1]);
model.component('comp1').physics('tcd').feature('ice1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('ice1').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('ice1').set('D_cKb', {'D_K'; '0'; '0'; '0'; 'D_K'; '0'; '0'; '0'; 'D_K'});
model.component('comp1').physics('tcd').feature('ice1').set('D_cOHb', {'D_OH'; '0'; '0'; '0'; 'D_OH'; '0'; '0'; '0'; 'D_OH'});
model.component('comp1').physics('tcd').feature('ice1').set('D_cHb', {'D_H'; '0'; '0'; '0'; 'D_H'; '0'; '0'; '0'; 'D_H'});
model.component('comp1').physics('tcd').feature('ice1').label('Anolyte');
model.component('comp1').physics('tcd').feature('init1').set('initc', {'c_K'; 'cOH0'; 'cH0'});
model.component('comp1').physics('tcd').feature('init1').label('Initial Values');
model.component('comp1').physics('tcd').feature('pce1').set('u_src', 'root.comp1.dll.u');
model.component('comp1').physics('tcd').feature('pce1').set('D_cKb', {'D_K_AEM'; '0'; '0'; '0'; 'D_K_AEM'; '0'; '0'; '0'; 'D_K_AEM'});
model.component('comp1').physics('tcd').feature('pce1').set('D_cOHb', {'D_OH_AEM'; '0'; '0'; '0'; 'D_OH_AEM'; '0'; '0'; '0'; 'D_OH_AEM'});
model.component('comp1').physics('tcd').feature('pce1').set('D_cHb', {'D_H_AEM'; '0'; '0'; '0'; 'D_H_AEM'; '0'; '0'; '0'; 'D_H_AEM'});
model.component('comp1').physics('tcd').feature('pce1').set('epsilonr_mat', 'from_mat');
model.component('comp1').physics('tcd').feature('pce1').set('epsilonr', [1; 0; 0; 0; 1; 0; 0; 0; 1]);
model.component('comp1').physics('tcd').feature('pce1').set('sigma_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').set('sigma', {'sigma_CL'; '0'; '0'; '0'; 'sigma_CL'; '0'; '0'; '0'; 'sigma_CL'});
model.component('comp1').physics('tcd').feature('pce1').set('epsl', 'if(porosity_I_CL==0,porosity_L_CL,porosity_I_CL)');
model.component('comp1').physics('tcd').feature('pce1').set('epss', 'porosity_S_CL');
model.component('comp1').physics('tcd').feature('pce1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce1').label('Porous Electrode CL');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('Vi0', [0; 2; 0]);
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('nm', 2);
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('Eeq', 'E_H2x_1');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('i0', 'i0_H2_old');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('alphaa', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('alphac', 'alpha_H2');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('CR', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('CO', '(conc_H2O^d_H2O_H2_1)');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('ilocmat', 'i_exp_H2*14.5');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('ilim', '1000[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('Av', 'av_CL2');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce1').feature('per1').label('Porous Electrode Reaction H2');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('Vi0', [0; 8; 0]);
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('nm', 8);
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('Eeq', 'E_C2H4x_1');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('i0', 'i0_C2H4 * exp(-Ea_C2H4/(R_const*T))');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('alphaa', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('alphac', 'alpha_C2H4');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('CR', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('CO', '((COnorm2)^d_CO_C2H4_1)*(conc_H2O^d_H2O_C2H4_1)');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('ilocmat', 'i_exp_C2H4*14.5');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('ilim', '-37[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('Av', 'av_CL2');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce1').feature('per2').label('Porous Electrode Reaction C2H4');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('Vi0', [0; 3; 0]);
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('nm', 4);
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('Eeq', 'E_AcOx_1');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('i0', 'i0_AcO *  exp(-Ea_AcO/(pH_CL*R_const*T))');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('alphaa', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('alphac', 'alpha_AcO');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('CR', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('CO', '((COnorm2)^d_CO_AcO_1)*(conc_H2O^d_H2O_AcO_1)');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('ilocmat', 'i_exp_AcO*14.5');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('ilim', '1000[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('Av', 'av_CL2');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce1').feature('per4').label('Porous Electrode Reaction AcO');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('Vi0', [0; 8; 0]);
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('nm', 8);
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('Eeq', 'E_EtOHx_1');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('i0', 'i0_EtOH * exp(-Ea_EtOH/(R_const*T))');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('alphaa', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('alphac', 'alpha_EtOH');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('CR', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('CO', '((COnorm2)^d_CO_EtOH_1)*(conc_H2O^d_H2O_EtOH_1)');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('ilocmat', 'i_exp_EtOH*14.5');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('ilim', '1000[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('Av', 'av_CL2');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce1').feature('per6').label('Porous Electrode Reaction EtOH');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('Vi0', [0; 12; 0]);
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('nm', 12);
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('Eeq', 'E_PrOHx_1');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('i0', 'i0_PrOH * exp(-Ea_PrOH/(R_const*T))');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('alphaa', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('alphac', 'alpha_PrOH');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('CR', 0);
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('CO', '((COnorm2)^d_CO_PrOH_1)*(conc_H2O^d_H2O_PrOH_1)');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('ilocmat', 'i_exp_PrOH*14.5');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('ilim', '1000[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('Av', 'av_CL2');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce1').feature('per7').label('Porous Electrode Reaction PrOH');
model.component('comp1').physics('tcd').feature('pce2').set('u_src', 'root.comp1.dll.u');
model.component('comp1').physics('tcd').feature('pce2').set('D_cKb', {'D_K_AEM'; '0'; '0'; '0'; 'D_K_AEM'; '0'; '0'; '0'; 'D_K_AEM'});
model.component('comp1').physics('tcd').feature('pce2').set('D_cOHb', {'D_OH_AEM'; '0'; '0'; '0'; 'D_OH_AEM'; '0'; '0'; '0'; 'D_OH_AEM'});
model.component('comp1').physics('tcd').feature('pce2').set('D_cHb', {'D_H_AEM'; '0'; '0'; '0'; 'D_H_AEM'; '0'; '0'; '0'; 'D_H_AEM'});
model.component('comp1').physics('tcd').feature('pce2').set('epsilonr_mat', 'from_mat');
model.component('comp1').physics('tcd').feature('pce2').set('epsilonr', [1; 0; 0; 0; 1; 0; 0; 0; 1]);
model.component('comp1').physics('tcd').feature('pce2').set('sigma_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce2').set('sigma', {'sigma_cnps'; '0'; '0'; '0'; 'sigma_cnps'; '0'; '0'; '0'; 'sigma_cnps'});
model.component('comp1').physics('tcd').feature('pce2').set('epsl', 'if(porosity_I_CNPs==0,porosity_L_CNPs,porosity_I_CNPs)');
model.component('comp1').physics('tcd').feature('pce2').set('epss', 'porosity_S_CNPs');
model.component('comp1').physics('tcd').feature('pce2').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce2').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce2').label('Porous Electrode CNPs');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('Vi0', [0; 2; 0]);
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('nm', 2);
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('Eeq', 'E_H2x_1');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('i0', 'i0_H2_old');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('alphaa', 0);
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('alphac', 'alpha_H2');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('CR', 0);
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('CO', '(conc_H2O^d_H2O_H2_1)');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('ilocmat', 'i_exp_H2*14.5');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('Av', 'av_CNPs2');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce2').feature('per1').label('Porous Electrode Reaction HER');
model.component('comp1').physics('tcd').feature('iem1').set('rhofix', 'cMem*F_const');
model.component('comp1').physics('tcd').feature('iem1').set('ApplyDonnanBoundaryConditions', false);
model.component('comp1').physics('tcd').feature('iem1').set('D_cKb', {'D_K_AEM'; '0'; '0'; '0'; 'D_K_AEM'; '0'; '0'; '0'; 'D_K_AEM'});
model.component('comp1').physics('tcd').feature('iem1').set('D_cOHb', {'D_OH_AEM'; '0'; '0'; '0'; 'D_OH_AEM'; '0'; '0'; '0'; 'D_OH_AEM'});
model.component('comp1').physics('tcd').feature('iem1').set('D_cHb', {'D_H_AEM'; '0'; '0'; '0'; 'D_H_AEM'; '0'; '0'; '0'; 'D_H_AEM'});
model.component('comp1').physics('tcd').feature('iem1').set('epsilonr_mat', 'from_mat');
model.component('comp1').physics('tcd').feature('iem1').set('epsilonr', [1; 0; 0; 0; 1; 0; 0; 0; 1]);
model.component('comp1').physics('tcd').feature('iem1').set('epsl', 1);
model.component('comp1').physics('tcd').feature('iem1').set('DiffusionCorrModel', 'NoCorr');
model.component('comp1').physics('tcd').feature('iem1').set('fDl', 'eps_L1/(x_w1*(1+eta_HCO31))');
model.component('comp1').physics('tcd').feature('iem1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('iem1').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('iem1').label('Ion Exchange Membrane (AEM diffusion coeff''s causing convergence prob''s)');
model.component('comp1').physics('tcd').feature('pce3').set('D_cKb', {'D_K'; '0'; '0'; '0'; 'D_K'; '0'; '0'; '0'; 'D_K'});
model.component('comp1').physics('tcd').feature('pce3').set('D_cOHb', {'D_OH'; '0'; '0'; '0'; 'D_OH'; '0'; '0'; '0'; 'D_OH'});
model.component('comp1').physics('tcd').feature('pce3').set('D_cHb', {'D_H'; '0'; '0'; '0'; 'D_H'; '0'; '0'; '0'; 'D_H'});
model.component('comp1').physics('tcd').feature('pce3').set('epsilonr_mat', 'from_mat');
model.component('comp1').physics('tcd').feature('pce3').set('epsilonr', [1; 0; 0; 0; 1; 0; 0; 0; 1]);
model.component('comp1').physics('tcd').feature('pce3').set('sigma_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce3').set('sigma', {'sigma_anode'; '0'; '0'; '0'; 'sigma_anode'; '0'; '0'; '0'; 'sigma_anode'});
model.component('comp1').physics('tcd').feature('pce3').set('epsl', 'porosity_anode');
model.component('comp1').physics('tcd').feature('pce3').set('epss', '1-porosity_anode');
model.component('comp1').physics('tcd').feature('pce3').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce3').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce3').label('Porous Electrode Anode (doesn''t like pH-dependent)');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('Vi0', [0; 4; 0]);
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('nm', 4);
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('Eeq', 'E_O2x2');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('i0', 'i0_O2_B');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('alphaa', 1.5);
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('alphac', 0);
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('CR', 'cOHb/1[M]');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('CO', 0);
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('ilocmat', '-0.02[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('Av', 'a_v_anode');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce3').feature('per1').label('Porous Electrode Reaction O2 - basic');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('Vi0', [0; 0; -4]);
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('nm', 4);
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('Eeq_mat', 'userdef');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('Eeq', 'E_O2x2');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('i0', 'i0_O2_A');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('alphaa', 1.5);
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('alphac', 0);
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('CO', 0);
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('ilocmat', '-0.02[mA/cm^2]');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('ElectrodeKinetics', 'ConcentrationDependentKinetics');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('Av', 'a_v_anode');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').set('minput_temperature', 'T');
model.component('comp1').physics('tcd').feature('pce3').feature('per2').label('Porous Electrode Reaction O2 - acidic (sometimes doesn''t allow convergence; if so, reduce its i0)');
model.component('comp1').physics('tcd').feature('pot1').set('phisbnd', 'V_cath');
model.component('comp1').physics('tcd').feature('pot1').label('Electric Potential Cathode');
model.component('comp1').physics('tcd').feature('egnd1').label('Electric Ground Anode');
model.component('comp1').physics('tcd').feature('reac10').set('R_cOHb', 'R_OH_w');
model.component('comp1').physics('tcd').feature('reac10').set('R_cHb', 'R_H_w');
model.component('comp1').physics('tcd').feature('reac10').label('Reactions - water dissociation');
model.component('comp1').physics('tcd').feature('in1').set('c0', {'0'; 'cOH0'; 'cH0'});
model.component('comp1').physics('tcd').feature('conc1').set('species', [0; 1; 0]);
model.component('comp1').physics('tcd').feature('conc1').set('c0', {'0'; 'if(cOHb>=c_max_K, c_max_K, cOHb)'; '0'});
model.component('comp1').physics('tcd').feature('conc1').label('Concentration - steric limit on OH- (set as K+ due to electroneutrality because c_max_OH>c_max_K)');
model.component('comp1').physics('dll').label('Darcy''s Law for liquid - solves for liquid phase pressure');
model.component('comp1').physics('dll').prop('PhysicalModelProperty').set('Ac', 'cell_area');
model.component('comp1').physics('dll').feature('porous1').set('fluidType', 'gasLiquid');
model.component('comp1').physics('dll').feature('porous1').label('Porous Medium - GDL');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('rho_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('rho', '997[kg/m^3]');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('mu_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('mu', '1.0016[mPa*s]');
model.component('comp1').physics('dll').feature('porous1').feature('fluid1').set('chif', '4e-10');
model.component('comp1').physics('dll').feature('porous1').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous1').feature('pm1').set('epsilon', 'porosity_L_GDL');
model.component('comp1').physics('dll').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous1').feature('pm1').set('kappa', {'permea_eff_l_GDL'; '0'; '0'; '0'; 'permea_eff_l_GDL'; '0'; '0'; '0'; 'permea_eff_l_GDL'});
model.component('comp1').physics('dll').feature('porous2').set('fluidType', 'gasLiquid');
model.component('comp1').physics('dll').feature('porous2').label('Porous Medium - CL');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('rho_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('rho', '997[kg/m^3]');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('mu_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('mu', '1.0016[mPa*s]');
model.component('comp1').physics('dll').feature('porous2').feature('fluid1').set('chif', '4e-10');
model.component('comp1').physics('dll').feature('porous2').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous2').feature('pm1').set('epsilon', 'porosity_L_CL');
model.component('comp1').physics('dll').feature('porous2').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous2').feature('pm1').set('kappa', {'permea_eff_l_CL'; '0'; '0'; '0'; 'permea_eff_l_CL'; '0'; '0'; '0'; 'permea_eff_l_CL'});
model.component('comp1').physics('dll').feature('porous3').set('fluidType', 'gasLiquid');
model.component('comp1').physics('dll').feature('porous3').label('Porous Medium - CNPs');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('rho_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('rho', '997[kg/m^3]');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('mu_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('mu', '1.0016[mPa*s]');
model.component('comp1').physics('dll').feature('porous3').feature('fluid1').set('chif', '4e-10');
model.component('comp1').physics('dll').feature('porous3').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous3').feature('pm1').set('epsilon', 'porosity_L_CNPs');
model.component('comp1').physics('dll').feature('porous3').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dll').feature('porous3').feature('pm1').set('kappa', {'permea_eff_l_CNPs'; '0'; '0'; '0'; 'permea_eff_l_CNPs'; '0'; '0'; '0'; 'permea_eff_l_CNPs'});
model.component('comp1').physics('dll').feature('pr1').set('p0', 'pDarcy_g - Sl_GDL');
model.component('comp1').physics('dll').feature('ms2').set('Qm', 'M_H2O*av_CL2*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('dll').feature('ms2').label('Mass Source - water condensation - CL');
model.component('comp1').physics('dll').feature('ms10').set('Qm', 'M_H2O*av_CNPs2*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('dll').feature('ms10').label('Mass Source - water condensation - CNPs');
model.component('comp1').physics('dll').feature('ms4').set('Qm', 'M_H2O*av_GDL*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('dll').feature('ms4').label('Mass Source - water condensation - GDL');
model.component('comp1').physics('dll').feature('ms9').set('Qm', '- M_H2O* ((- tcd.iv_per1*2 /(2*F_const)) + (- tcd.iv_per2*6 /(8*F_const)) +(- tcd.iv_per4*3 /(4*F_const)) +(- tcd.iv_per6*7 /(8*F_const)) +(- tcd.iv_per7*10 /(12*F_const)))');
model.component('comp1').physics('dll').feature('ms9').label('Water consumption from CORR - CL');
model.component('comp1').physics('dll').feature('ms11').set('Qm', '- M_H2O* ((- tcd.iv_per1*2 /(2*F_const)))');
model.component('comp1').physics('dll').feature('ms11').label('Water consumption from HER - CNPs');
model.component('comp1').physics('dll').feature('ms5').set('Qm', 'if(RH_G>100[%],M_H2O*((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)');
model.component('comp1').physics('dll').feature('ms5').label('Mass Source - CL - RH condition');
model.component('comp1').physics('dll').feature('ms12').set('Qm', 'if(RH_G>100[%],M_H2O*((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)');
model.component('comp1').physics('dll').feature('ms12').label('Mass Source - CNPs - RH condition');
model.component('comp1').physics('dll').feature('ms6').set('Qm', 'if(RH_G>100[%],M_H2O*((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)');
model.component('comp1').physics('dll').feature('ms6').label('Mass Source - GDL - RH condition');
model.component('comp1').physics('dll').feature('mf4').set('N0', 'M_H2O*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)/1[atm])-aw_new)');
model.component('comp1').physics('dll').feature('mf4').active(false);
model.component('comp1').physics('dll').feature('mf4').label('Mass Flux - from membrane');
model.component('comp1').physics('dll').feature('ms13').set('Qm', '-M_H2O*av_CL2*(10^4[m/s])*(1/(R_const*T))*(pDarcy_l-((Cw/Cw_0)*1[atm]))');
model.component('comp1').physics('dll').feature('ms13').label('Mass Source - water from ionomer - CL');
model.component('comp1').physics('dll').feature('ms14').set('Qm', '-M_H2O*av_CNPs2*(10^4[m/s])*(1/(R_const*T))*(pDarcy_l-((Cw/Cw_0)*1[atm]))');
model.component('comp1').physics('dll').feature('ms14').label('Mass Source - water from ionomer - CNPs');
model.component('comp1').physics('dlg').label('Darcy''s Law for Gas - solves for gas phase pressure');
model.component('comp1').physics('dlg').prop('PhysicalModelProperty').set('Ac', 'cell_area');
model.component('comp1').physics('dlg').feature('porous1').set('fluidType', 'idealGas');
model.component('comp1').physics('dlg').feature('porous1').label('Porous Medium GDL');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('fluidType', 'idealGas');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('Rs_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('Mn_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('Mn', 'tcs.Mn');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('mu_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('mu', 'CO_viscosity');
model.component('comp1').physics('dlg').feature('porous1').feature('fluid1').set('chif', '4e-10');
model.component('comp1').physics('dlg').feature('porous1').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('pm1').set('epsilon', 'porosity_G_GDL');
model.component('comp1').physics('dlg').feature('porous1').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('pm1').set('kappa', {'permea_eff_g_GDL'; '0'; '0'; '0'; 'permea_eff_g_GDL'; '0'; '0'; '0'; 'permea_eff_g_GDL'});
model.component('comp1').physics('dlg').feature('porous1').feature('pm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dlg').feature('porous1').feature('pm1').set('minput_temperature', 'T');
model.component('comp1').physics('dlg').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('dlg').feature('dcont1').label('Continuity');
model.component('comp1').physics('dlg').feature('pr1').set('p0', 'pressure_in');
model.component('comp1').physics('dlg').feature('pr1').label('Pressure ');
model.component('comp1').physics('dlg').feature('porous3').set('fluidType', 'idealGas');
model.component('comp1').physics('dlg').feature('porous3').label('Porous Medium CL');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('fluidType', 'idealGas');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('Mn_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('Mn', 'tcs.Mn');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('mu_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('mu', 'CO_viscosity');
model.component('comp1').physics('dlg').feature('porous3').feature('fluid1').set('chif', '4e-10');
model.component('comp1').physics('dlg').feature('porous3').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous3').feature('pm1').set('epsilon', 'porosity_G_CL');
model.component('comp1').physics('dlg').feature('porous3').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous3').feature('pm1').set('kappa', {'permea_eff_g_CL'; '0'; '0'; '0'; 'permea_eff_g_CL'; '0'; '0'; '0'; 'permea_eff_g_CL'});
model.component('comp1').physics('dlg').feature('porous3').feature('pm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dlg').feature('porous3').feature('pm1').set('minput_temperature', 'T');
model.component('comp1').physics('dlg').feature('porous4').set('fluidType', 'idealGas');
model.component('comp1').physics('dlg').feature('porous4').label('Porous Medium CNPs');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('fluidType', 'idealGas');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('Mn_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('Mn', 'tcs.Mn');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('mu_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('mu', 'CO_viscosity');
model.component('comp1').physics('dlg').feature('porous4').feature('fluid1').set('chif', '4e-10');
model.component('comp1').physics('dlg').feature('porous4').feature('pm1').set('epsilon_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous4').feature('pm1').set('epsilon', 'porosity_G_CNPs');
model.component('comp1').physics('dlg').feature('porous4').feature('pm1').set('kappa_mat', 'userdef');
model.component('comp1').physics('dlg').feature('porous4').feature('pm1').set('kappa', {'permea_eff_g_CNPs'; '0'; '0'; '0'; 'permea_eff_g_CNPs'; '0'; '0'; '0'; 'permea_eff_g_CNPs'});
model.component('comp1').physics('dlg').feature('porous4').feature('pm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('dlg').feature('porous4').feature('pm1').set('minput_temperature', 'T');
model.component('comp1').physics('dlg').feature('ms1').set('Qm', '(-tds.reac1.R_cCOb * M_CO)');
model.component('comp1').physics('dlg').feature('ms1').label('Mass Source - CO dissoultion - CL');
model.component('comp1').physics('dlg').feature('ms4').set('Qm', '(-tds.reac5.R_cCOb * M_CO)');
model.component('comp1').physics('dlg').feature('ms4').label('Mass Source - CO dissoultion - CNPs');
model.component('comp1').physics('dlg').feature('ms2').set('Qm', '(- tcd.iv_per2 * M_C2H4/F_const) + (- tcd.iv_per1 * M_H2/F_const)');
model.component('comp1').physics('dlg').feature('ms2').label('Mass Source - gas products evolution - CL');
model.component('comp1').physics('dlg').feature('ms3').set('Qm', '- tcd.iv_per1 * M_H2/F_const');
model.component('comp1').physics('dlg').feature('ms3').label('Mass Source - H2 evolution - CNPs');
model.component('comp1').physics('dlg').feature('ms12').set('Qm', '-M_H2O*av_CL2*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('dlg').feature('ms12').label('Mass Source - water evap - CL');
model.component('comp1').physics('dlg').feature('ms19').set('Qm', '-M_H2O*av_CNPs2*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('dlg').feature('ms19').label('Mass Source - water evap - CNPs');
model.component('comp1').physics('dlg').feature('ms17').set('Qm', '-M_H2O*av_GDL*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('dlg').feature('ms17').label('Mass Source - water evap - GDL');
model.component('comp1').physics('dlg').feature('ms15').set('Qm', 'if(RH_G>100[%],-M_H2O*((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)');
model.component('comp1').physics('dlg').feature('ms15').label('Mass Source - CL - RH condition');
model.component('comp1').physics('dlg').feature('ms20').set('Qm', 'if(RH_G>100[%],-M_H2O*((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)');
model.component('comp1').physics('dlg').feature('ms20').label('Mass Source - CNPs - RH condition');
model.component('comp1').physics('dlg').feature('ms18').set('Qm', 'if(RH_G>100[%],-M_H2O*((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)');
model.component('comp1').physics('dlg').feature('ms18').label('Mass Source - GDL - RH condition');
model.component('comp1').physics('tcs').label('Transport of Concentrated Species - solves for gas phase composition');
model.component('comp1').physics('tcs').prop('Ac').set('Ac', 'cell_area');
model.component('comp1').physics('tcs').prop('TransportMechanism').set('MassTransferInPorousMedia', true);
model.component('comp1').physics('tcs').feature('sp1').set('M_wH2j', 'M_H2');
model.component('comp1').physics('tcs').feature('sp1').set('M_wCOj', 'M_CO');
model.component('comp1').physics('tcs').feature('sp1').set('M_wH2Oj', 'M_H2O');
model.component('comp1').physics('tcs').feature('sp1').set('M_wC2H4j', 'M_C2H4');
model.component('comp1').physics('tcs').feature('sp1').set('M_wN2j', 'M_N2');
model.component('comp1').physics('tcs').feature('sp1').label('Species Molar Masses');
model.component('comp1').physics('tcs').feature('cdm1').set('rho', 'dl.rho');
model.component('comp1').physics('tcs').feature('cdm1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('tcs').feature('cdm1').set('Dik', {'1';  ...
'D_CO_H2';  ...
'D_H2O_H2';  ...
'D_H2_C2H4';  ...
'D_H2_N2';  ...
'D_CO_H2';  ...
'1';  ...
'D_CO_H2O';  ...
'D_CO_C2H4';  ...
'D_CO_N2';  ...
'D_H2O_H2';  ...
'D_CO_H2O';  ...
'1';  ...
'D_H2O_C2H4';  ...
'D_H2O_N2';  ...
'D_H2_C2H4';  ...
'D_CO_C2H4';  ...
'D_H2O_C2H4';  ...
'1';  ...
'D_C2H4_N2';  ...
'D_H2_N2';  ...
'D_CO_N2';  ...
'D_H2O_N2';  ...
'D_C2H4_N2';  ...
'1'});
model.component('comp1').physics('tcs').feature('cdm1').set('Species1', {'w1'; 'wH2j'; 'wH2j'; 'wCOj'; 'wCOj'; 'wH2j3'; 'wCOj'; 'wH2Oj'; 'wH2Oj'; 'wC2H4j'});
model.component('comp1').physics('tcs').feature('cdm1').set('Species2', {'w2'; 'wH2j3'; 'wH2j4'; 'wH2j3'; 'wH2j4'; 'wH2j4'; 'wH2j5'; 'wC2H4j'; 'wH2j5'; 'wH2j5'});
model.component('comp1').physics('tcs').feature('cdm1').set('DF', {'D_CO_H2'; 'D_H2O_H2'; 'D_H2_C2H4'; 'D_H2_N2'; 'D_CO_C2H4'; 'D_H2O_C2H4'; 'D_CO_N2'; '1e-5[m^2/s]'; 'D_H2O_N2'; 'D_C2H4_N2'});
model.component('comp1').physics('tcs').feature('cdm1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('tcs').feature('cdm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcs').feature('cdm1').set('minput_temperature', 'T');
model.component('comp1').physics('tcs').feature('cdm1').label('Transport Properties GDL');
model.component('comp1').physics('tcs').feature('porousKn1').label('Porous Medium (Knudsen Diffusion Enabled) 1');
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('IncludePoreWallInteractions', true);
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('rho', 'dl.rho');
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('Dik', {'1';  ...
'D_CO_H2';  ...
'D_H2O_H2';  ...
'D_H2_C2H4';  ...
'D_H2_N2';  ...
'D_CO_H2';  ...
'1';  ...
'D_CO_H2O';  ...
'D_CO_C2H4';  ...
'D_CO_N2';  ...
'D_H2O_H2';  ...
'D_CO_H2O';  ...
'1';  ...
'D_H2O_C2H4';  ...
'D_H2O_N2';  ...
'D_H2_C2H4';  ...
'D_CO_C2H4';  ...
'D_H2O_C2H4';  ...
'1';  ...
'D_C2H4_N2';  ...
'D_H2_N2';  ...
'D_CO_N2';  ...
'D_H2O_N2';  ...
'D_C2H4_N2';  ...
'1'});
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('DF', {'D_CO_H2'; 'D_H2O_H2'; 'D_H2_C2H4'; 'D_H2_N2'; 'D_CO_C2H4'; 'D_H2O_C2H4'; 'D_CO_N2'; '1e-5[m^2/s]'; 'D_H2O_N2'; 'D_C2H4_N2'});
model.component('comp1').physics('tcs').feature('porousKn1').feature('fluid1').set('d_pore', '2 * pore_GDL');
model.component('comp1').physics('tcs').feature('porousKn1').feature('pm1').set('epsilon_p', 1);
model.component('comp1').physics('tcs').feature('init1').set('MixtureSpecification', 'MoleFractions');
model.component('comp1').physics('tcs').feature('init1').set('w0', {'0.1'; 'if(partial_pressure_CO==1[atm], 1 - (pvap/pDarcy_g)*(M_H2O/M_A), (partial_pressure_CO/1[atm]))'; '(pvap/pDarcy_g)*(M_H2O/M_A)'; '0'; 'if(partial_pressure_CO==1[atm], 0, (pressure_in/1[atm]) - (partial_pressure_CO/1[atm]) -(pvap/pDarcy_g)*(M_H2O/M_A))'});
model.component('comp1').physics('tcs').feature('init1').set('x0', {'0'; '1 - x_H2O_in'; 'x_H2O_in'; '0'; '0'});
model.component('comp1').physics('tcs').feature('init1').label('Initial Values 1 (it doesn''t matter what these values are, they are just important for convergence)');
model.component('comp1').physics('tcs').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('tcs').feature('dcont1').label('Continuity');
model.component('comp1').physics('tcs').feature('mf1').set('species', [0; 1; 1; 1; 1]);
model.component('comp1').physics('tcs').feature('mf1').set('wbnd', {'0'; 'if(partial_pressure_CO==1[atm], 1 - (pvap/pDarcy_g)*(M_H2O/M_A), (partial_pressure_CO/1[atm]))'; '(pvap/pDarcy_g)*(M_H2O/M_A)'; '0'; 'if(partial_pressure_CO>1,0, if(partial_pressure_CO==1[atm], 0, (pressure_in/1[atm]) - (partial_pressure_CO/1[atm]) -(pvap/pDarcy_g)*(M_H2O/M_A)))'});
model.component('comp1').physics('tcs').feature('mf1').active(false);
model.component('comp1').physics('tcs').feature('mf1').label('Input mass Fraction (adjust the N2 to = 0 if partial_pressure_CO >1)');
model.component('comp1').physics('tcs').feature('porous1').label('Porous Medium GDL');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('rho', 'dl.rho');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('Dik', {'1';  ...
'D_CO_H2';  ...
'D_H2O_H2';  ...
'D_H2_C2H4';  ...
'D_H2_N2';  ...
'D_CO_H2';  ...
'1';  ...
'D_CO_H2O';  ...
'D_CO_C2H4';  ...
'D_CO_N2';  ...
'D_H2O_H2';  ...
'D_CO_H2O';  ...
'1';  ...
'D_H2O_C2H4';  ...
'D_H2O_N2';  ...
'D_H2_C2H4';  ...
'D_CO_C2H4';  ...
'D_H2O_C2H4';  ...
'1';  ...
'D_C2H4_N2';  ...
'D_H2_N2';  ...
'D_CO_N2';  ...
'D_H2O_N2';  ...
'D_C2H4_N2';  ...
'1'});
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('Species1', {'wH2j'; 'wH2j'; 'wH2j'; 'wCOj'; 'wCOj'; 'wH2Oj'; 'wCOj'; 'wH2Oj'; 'wH2Oj'; 'wC2H4j'});
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('Species2', {'wCOj'; 'wH2Oj'; 'wC2H4j'; 'wH2Oj'; 'wC2H4j'; 'wC2H4j'; 'wH2j5'; 'wC2H4j'; 'wH2j5'; 'wH2j5'});
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('DF', {'D_CO_H2'; 'D_H2O_H2'; 'D_H2_C2H4'; 'D_H2_N2'; 'D_CO_H2O'; 'D_CO_C2H4'; 'D_CO_N2'; 'D_H2O_C2H4'; 'D_H2O_N2'; 'D_C2H4_N2'});
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('FluidDiffusivityModelType', 'BruggemanModel');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('tcs').feature('porous1').feature('fluid1').set('IncludePoreWallInteractions', true);
model.component('comp1').physics('tcs').feature('porous1').feature('pm1').set('epsilon_p', 'porosity_G_GDL');
model.component('comp1').physics('tcs').feature('porous2').label('Porous Medium CL');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('rho', 'dl.rho');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('Dik', {'1';  ...
'D_CO_H2';  ...
'D_H2O_H2';  ...
'D_H2_C2H4';  ...
'D_H2_N2';  ...
'D_CO_H2';  ...
'1';  ...
'D_CO_H2O';  ...
'D_CO_C2H4';  ...
'D_CO_N2';  ...
'D_H2O_H2';  ...
'D_CO_H2O';  ...
'1';  ...
'D_H2O_C2H4';  ...
'D_H2O_N2';  ...
'D_H2_C2H4';  ...
'D_CO_C2H4';  ...
'D_H2O_C2H4';  ...
'1';  ...
'D_C2H4_N2';  ...
'D_H2_N2';  ...
'D_CO_N2';  ...
'D_H2O_N2';  ...
'D_C2H4_N2';  ...
'1'});
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('Species1', {'wH2j'; 'wH2j'; 'wH2j'; 'wCOj'; 'wCOj'; 'wH2Oj'; 'wCOj'; 'wH2Oj'; 'wH2Oj'; 'wC2H4j'});
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('Species2', {'wCOj'; 'wH2Oj'; 'wC2H4j'; 'wH2Oj'; 'wC2H4j'; 'wC2H4j'; 'wH2j5'; 'wC2H4j'; 'wH2j5'; 'wH2j5'});
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('DF', {'D_CO_H2'; 'D_H2O_H2'; 'D_H2_C2H4'; 'D_H2_N2'; 'D_CO_H2O'; 'D_CO_C2H4'; 'D_CO_N2'; 'D_H2O_C2H4'; 'D_H2O_N2'; 'D_C2H4_N2'});
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('FluidDiffusivityModelType', 'BruggemanModel');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('tcs').feature('porous2').feature('fluid1').set('IncludePoreWallInteractions', true);
model.component('comp1').physics('tcs').feature('porous2').feature('pm1').set('epsilon_p', 'porosity_G_CL');
model.component('comp1').physics('tcs').feature('porous3').label('Porous Medium CNPs');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('rho', 'dl.rho');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('Dik', {'1';  ...
'D_CO_H2';  ...
'D_H2O_H2';  ...
'D_H2_C2H4';  ...
'D_H2_N2';  ...
'D_CO_H2';  ...
'1';  ...
'D_CO_H2O';  ...
'D_CO_C2H4';  ...
'D_CO_N2';  ...
'D_H2O_H2';  ...
'D_CO_H2O';  ...
'1';  ...
'D_H2O_C2H4';  ...
'D_H2O_N2';  ...
'D_H2_C2H4';  ...
'D_CO_C2H4';  ...
'D_H2O_C2H4';  ...
'1';  ...
'D_C2H4_N2';  ...
'D_H2_N2';  ...
'D_CO_N2';  ...
'D_H2O_N2';  ...
'D_C2H4_N2';  ...
'1'});
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('Species1', {'wH2j'; 'wH2j'; 'wH2j'; 'wCOj'; 'wCOj'; 'wH2Oj'; 'wCOj'; 'wH2Oj'; 'wH2Oj'; 'wC2H4j'});
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('Species2', {'wCOj'; 'wH2Oj'; 'wC2H4j'; 'wH2Oj'; 'wC2H4j'; 'wC2H4j'; 'wH2j5'; 'wC2H4j'; 'wH2j5'; 'wH2j5'});
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('DF', {'D_CO_H2'; 'D_H2O_H2'; 'D_H2_C2H4'; 'D_H2_N2'; 'D_CO_H2O'; 'D_CO_C2H4'; 'D_CO_N2'; 'D_H2O_C2H4'; 'D_H2O_N2'; 'D_C2H4_N2'});
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('FluidDiffusivityModelType', 'BruggemanModel');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('minput_temperature', 'T');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('tcs').feature('porous3').feature('fluid1').set('IncludePoreWallInteractions', true);
model.component('comp1').physics('tcs').feature('porous3').feature('pm1').set('epsilon_p', 'porosity_G_CNPs');
model.component('comp1').physics('tcs').feature('reac13').set('R_wCOj', '(-tds.reac1.R_cCOb * M_CO)');
model.component('comp1').physics('tcs').feature('reac13').label('Reaction Sources - CO dissolution - CL');
model.component('comp1').physics('tcs').feature('reac1').set('MassTransferToOtherPhases', true);
model.component('comp1').physics('tcs').feature('reac1').set('R_wH2j', '- tcd.iv_per1 * M_H2/F_const');
model.component('comp1').physics('tcs').feature('reac1').set('R_wC2H4j', '- tcd.iv_per2 * M_C2H4/F_const');
model.component('comp1').physics('tcs').feature('reac1').label('Reaction Sources - products evolution - CL');
model.component('comp1').physics('tcs').feature('reac5').set('R_wCOj', '(-tds.reac5.R_cCOb * M_CO)');
model.component('comp1').physics('tcs').feature('reac5').label('Reaction Sources - CO dissolution- CNPs');
model.component('comp1').physics('tcs').feature('reac15').set('MassTransferToOtherPhases', true);
model.component('comp1').physics('tcs').feature('reac15').set('R_wH2j', '- tcd.iv_per1 * M_H2/F_const');
model.component('comp1').physics('tcs').feature('reac15').label('Reaction Sources - HER - CNPs');
model.component('comp1').physics('tcs').feature('reac11').set('R_wH2Oj', '-M_H2O*av_CL2*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('tcs').feature('reac11').label('Reaction Sources - water evap - CL');
model.component('comp1').physics('tcs').feature('reac6').set('R_wH2Oj', '-M_H2O*av_CNPs2*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('tcs').feature('reac6').label('Reaction Sources - water evap - CNPs');
model.component('comp1').physics('tcs').feature('reac14').set('R_wH2Oj', '-M_H2O*av_GDL*(0.06[mol/(s*m^2)])*(((tcs.x_wH2Oj*pDarcy_g)-pvap)/1[atm])');
model.component('comp1').physics('tcs').feature('reac14').label('Reaction Sources - water evap - GDL');
model.component('comp1').physics('tcs').feature('in1').set('MixtureSpecification', 'MoleFractions');
model.component('comp1').physics('tcs').feature('in1').set('x0', {'0.1'; 'if(partial_pressure_CO==1[atm], 1 - (pvap/pDarcy_g), (partial_pressure_CO/1[atm]))'; '(pvap/pDarcy_g)'; '0'; 'if(partial_pressure_CO>1,0, if(partial_pressure_CO==1[atm], 0, (pressure_in/1[atm]) - (partial_pressure_CO/1[atm]) -(pvap/pDarcy_g)))'});
model.component('comp1').physics('ht3').prop('PhysicalModelProperty').set('Ac', 'cell_area');
model.component('comp1').physics('ht3').prop('RadiationSettings').set('opaque', 'dfltopaque');
model.component('comp1').physics('ht3').prop('RadiationSettings').set('highOrderMeshElements', true);
model.component('comp1').physics('ht3').feature('porous1').label('Porous Medium - GDL');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('k', {'therm_CO'; '0'; '0'; '0'; 'therm_CO'; '0'; '0'; '0'; 'therm_CO'});
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('Cp', '29.15[J/(mol*K)]/M_CO');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('Rs_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('fluidType', 'idealGas');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('heatcapacity_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('heatcapacity', '29.15[J/(mol*K)]/M_CO');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('molarmass_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('fluid1').set('molarmass', 'tcs.Mn');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('poro', 'porosity_S_GDL');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('k_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('k_sp', {'therm_GDL'; '0'; '0'; '0'; 'therm_GDL'; '0'; '0'; '0'; 'therm_GDL'});
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('rho_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('rho_sp', '2.2[g/cm^3]');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('Cp_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('Cp_sp', '1.5[J/(g*degC)]');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('minput_strainreferencetemperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous1').feature('pm1').set('minput_strainreferencetemperature', 'T');
model.component('comp1').physics('ht3').feature('init1').set('Tinit', 'T_in');
model.component('comp1').physics('ht3').feature('temp1').set('T0', 'T_in_cathode');
model.component('comp1').physics('ht3').feature('temp1').label('Temperature - GDL inlet');
model.component('comp1').physics('ht3').feature('temp2').set('T0', 'T_in_anode');
model.component('comp1').physics('ht3').feature('temp2').label('Temperature - Anolyte');
model.component('comp1').physics('ht3').feature('porous2').label('Porous Medium - CL');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('k', {'therm_CO'; '0'; '0'; '0'; 'therm_CO'; '0'; '0'; '0'; 'therm_CO'});
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('Cp', '29.15[J/(mol*K)]/M_CO');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('Rs_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('fluidType', 'idealGas');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('heatcapacity_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('heatcapacity', '29.15[J/(mol*K)]/M_CO');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('molarmass_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('fluid1').set('molarmass', 'tcs.Mn');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('poro', 'porosity_S_CL');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('k_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('k_sp', {'therm_CL'; '0'; '0'; '0'; 'therm_CL'; '0'; '0'; '0'; 'therm_CL'});
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('rho_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('rho_sp', '8.96[g/cm^3]');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('Cp_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('Cp_sp', '0.385[J/(g*degC)]');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('minput_strainreferencetemperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('minput_strainreferencetemperature', 'T');
model.component('comp1').physics('ht3').feature('porous2').feature('pm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').label('Porous Medium - CNPs');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('k', {'therm_CO'; '0'; '0'; '0'; 'therm_CO'; '0'; '0'; '0'; 'therm_CO'});
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('Cp', '29.15[J/(mol*K)]/M_CO');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('Rs_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('u_src', 'root.comp1.dlg.u');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('fluidType', 'idealGas');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('heatcapacity_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('heatcapacity', '29.15[J/(mol*K)]/M_CO');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('molarmass_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('fluid1').set('molarmass', 'tcs.Mn');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('poro', 'porosity_S_CNPs');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('k_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('k_sp', {'therm_CNPs'; '0'; '0'; '0'; 'therm_CNPs'; '0'; '0'; '0'; 'therm_CNPs'});
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('rho_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('rho_sp', '2.26[g/cm^3]');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('Cp_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('Cp_sp', '8.23[J/(mol*K)]/12.011[g/mol]');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('minput_strainreferencetemperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('minput_strainreferencetemperature', 'T');
model.component('comp1').physics('ht3').feature('porous3').feature('pm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('solid1').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('solid1').set('k', {'therm_AEM'; '0'; '0'; '0'; 'therm_AEM'; '0'; '0'; '0'; 'therm_AEM'});
model.component('comp1').physics('ht3').feature('solid1').set('rho_mat', 'userdef');
model.component('comp1').physics('ht3').feature('solid1').set('rho', 'rho_AEM');
model.component('comp1').physics('ht3').feature('solid1').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('solid1').set('Cp', '4.186[J/(g*degC)]');
model.component('comp1').physics('ht3').feature('solid1').set('minput_strainreferencetemperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('solid1').label('Solid - AEM');
model.component('comp1').physics('ht3').feature('fluid1').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('fluid1').set('k', {'therm_KOH'; '0'; '0'; '0'; 'therm_KOH'; '0'; '0'; '0'; 'therm_KOH'});
model.component('comp1').physics('ht3').feature('fluid1').set('rho_mat', 'userdef');
model.component('comp1').physics('ht3').feature('fluid1').set('rho', '2.12 [g/cm^3]');
model.component('comp1').physics('ht3').feature('fluid1').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('fluid1').set('Cp', '83.1[J/(mol*K)]/(56.1056[g/mol])');
model.component('comp1').physics('ht3').feature('fluid1').set('gamma_not_IG_mat', 'userdef');
model.component('comp1').physics('ht3').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('ht3').feature('fluid1').set('heatcapacity_mat', 'userdef');
model.component('comp1').physics('ht3').feature('fluid1').set('heatcapacity', '83.1[J/(mol*K)]/(56.1056[g/mol])');
model.component('comp1').physics('ht3').feature('fluid1').label('Fluid - Anolyte (considered stagnant because another module should be used to calculate velocity; not possible in 1D)');
model.component('comp1').physics('ht3').feature('solid5').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('solid5').set('k', {'therm_Ti'; '0'; '0'; '0'; 'therm_Ti'; '0'; '0'; '0'; 'therm_Ti'});
model.component('comp1').physics('ht3').feature('solid5').set('rho_mat', 'userdef');
model.component('comp1').physics('ht3').feature('solid5').set('rho', '4.5[g/cm^3]');
model.component('comp1').physics('ht3').feature('solid5').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('solid5').set('Cp', '0.523[J/(g*degC)]');
model.component('comp1').physics('ht3').feature('solid5').set('minput_strainreferencetemperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('solid5').label('Solid - anode (considered stagnant because another module should be used to calculate velocity; not possible in 1D)');
model.component('comp1').physics('ht3').feature('porous4').active(false);
model.component('comp1').physics('ht3').feature('porous4').label('Porous Medium - Anode');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('gasConstantType', 'numberAve');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('k_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('k', {'therm_KOH'; '0'; '0'; '0'; 'therm_KOH'; '0'; '0'; '0'; 'therm_KOH'});
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('rho_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('rho', '2.12 [g/cm^3]');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('Cp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('Cp', '83.1[J/(mol*K)]/(56.1056[g/mol])');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('gamma_not_IG_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('Rs_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('minput_pressure_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('heatcapacity_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('fluid1').set('heatcapacity', '83.1[J/(mol*K)]/(56.1056[g/mol])');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('porousMatrixPropertiesType', 'solidPhaseProperties');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('poro_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('poro', 'porosity_anode');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('k_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('k_sp', {'therm_Ti'; '0'; '0'; '0'; 'therm_Ti'; '0'; '0'; '0'; 'therm_Ti'});
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('rho_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('rho_sp', '4.5[g/cm^3]');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('Cp_sp_mat', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('Cp_sp', '0.523[J/(g*degC)]');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('minput_strainreferencetemperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('minput_strainreferencetemperature', 'T');
model.component('comp1').physics('ht3').feature('porous4').feature('pm1').set('minput_temperature_src', 'userdef');
model.component('comp1').physics('ht3').feature('hs2').set('Q0', 'qct_H2 +qct_C2H4 + qct_HCOO + qct_EtOH + qct_PrOH');
model.component('comp1').physics('ht3').feature('hs2').label('Heat Source - QCT (AcO assumed to be HCOO)');
model.component('comp1').physics('ht3').feature('hs6').set('Q0', 'qct_H2');
model.component('comp1').physics('ht3').feature('hs6').label('Heat Source - QCT - CNPs');
model.component('comp1').physics('ht3').feature('hs3').set('Q0', 'qb_w');
model.component('comp1').physics('ht3').feature('hs3').label('Heat Source - QB (equilibrium reactions)');
model.component('comp1').physics('ht3').feature('hs1').set('Q0', 'if(RH_G>100[%],-((10^7)[mol/(s*m^3)])*(RH_G-100[%]),0)* (H_vap(Temp2) - H_vap(20[degC]))');
model.component('comp1').physics('ht3').feature('hs1').label('Heat Source - QPT (heat of water vaporization)');
model.component('comp1').physics('ht3').feature('hs4').set('Q0', '(((tcd.Isx^2)/tcd.sigmaseffxx)+((tcd.Ilx^2)/tcd.kappa0xx))');
model.component('comp1').physics('ht3').feature('hs4').label('Heat Source - QJ - CL & CNPs');
model.component('comp1').physics('ht3').feature('hs5').set('Q0', 'qct_O2');
model.component('comp1').physics('ht3').feature('hs5').label('Heat Source - QCT - OER');
model.component('comp1').physics('ht3').feature('hs7').set('Q0', '((tcd.Isx^2)/tcd.sigmaseffxx)+((tcd.Ilx^2)/tcd.kappa0xx)');
model.component('comp1').physics('ht3').feature('hs7').label('Heat Source - QJ- OER');
model.component('comp1').physics('c2').label('Coefficient Form PDE 2 - liquid water flux in ionomer and membrane');
model.component('comp1').physics('c2').prop('Units').set('CustomSourceTermUnit', 'mol/(m^2*s)');
model.component('comp1').physics('c2').feature('cfeq1').set('c', 0);
model.component('comp1').physics('c2').feature('cfeq1').set('f', '-1*-(Edrag/F_const)*tcd.Ilx');
model.component('comp1').physics('c2').feature('cfeq1').set('da', -1);
model.component('comp1').physics('c2').feature('cfeq1').set('be', '-D_H2O');
model.component('comp1').physics('c2').feature('cfeq1').label('Coefficient Form PDE - AEM');
model.component('comp1').physics('c2').feature('init1').set('Cw', 'Cw_0');
model.component('comp1').physics('c2').feature('dir1').set('r', 'Cw_0');
model.component('comp1').physics('c2').feature('dir1').label('Dirichlet Boundary Condition 1 - lambda_AEM at anode');
model.component('comp1').physics('c2').feature('cfeq2').set('c', 0);
model.component('comp1').physics('c2').feature('cfeq2').set('f', '-1*-(Edrag_CL/F_const)*tcd.Ilx');
model.component('comp1').physics('c2').feature('cfeq2').set('da', -1);
model.component('comp1').physics('c2').feature('cfeq2').set('be', '-D_H2O*(if(porosity_I_CL==0,porosity_L_CL,porosity_I_CL)^1.5)');
model.component('comp1').physics('c2').feature('cfeq2').label('Coefficient Form PDE - CL');
model.component('comp1').physics('c2').feature('cfeq3').set('c', 0);
model.component('comp1').physics('c2').feature('cfeq3').set('f', '-1*-(Edrag_CL/F_const)*tcd.Ilx');
model.component('comp1').physics('c2').feature('cfeq3').set('da', -1);
model.component('comp1').physics('c2').feature('cfeq3').set('be', '-D_H2O*(if(porosity_I_CNPs==0,porosity_L_CNPs,porosity_I_CNPs)^1.5)');
model.component('comp1').physics('c2').feature('cfeq3').label('Coefficient Form PDE - CNPs');

model.component('comp1').mesh('mesh8').feature('size').set('hauto', 1);
model.component('comp1').mesh('mesh8').feature('edg1').label('GDE');
model.component('comp1').mesh('mesh8').feature('edg1').feature('dis1').label('dist');
model.component('comp1').mesh('mesh8').feature('edg1').feature('dis1').set('type', 'predefined');
model.component('comp1').mesh('mesh8').feature('edg1').feature('dis1').set('reverse', true);
model.component('comp1').mesh('mesh8').feature('edg1').feature('dis1').set('elemcount', 'round(height_GDL/2000[nm])');
model.component('comp1').mesh('mesh8').feature('edg1').feature('dis1').set('elemratio', 30);
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').active(false);
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').set('hmax', '1[um]');
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').set('hmin', 0.146);
model.component('comp1').mesh('mesh8').feature('edg1').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh8').feature('edg2').label('CL');
model.component('comp1').mesh('mesh8').feature('edg2').feature('dis2').label('dist');
model.component('comp1').mesh('mesh8').feature('edg2').feature('dis2').set('type', 'predefined');
model.component('comp1').mesh('mesh8').feature('edg2').feature('dis2').set('elemcount', 'round(height_CL/10[nm])');
model.component('comp1').mesh('mesh8').feature('edg2').feature('dis2').set('elemratio', 5);
model.component('comp1').mesh('mesh8').feature('edg2').feature('dis2').set('symmetric', true);
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').active(false);
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').set('hmax', '0.01[um]');
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').set('hmin', 0.146);
model.component('comp1').mesh('mesh8').feature('edg2').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh8').feature('edg3').label('carbon NPs');
model.component('comp1').mesh('mesh8').feature('edg3').feature('dis2').label('dist');
model.component('comp1').mesh('mesh8').feature('edg3').feature('dis2').set('type', 'predefined');
model.component('comp1').mesh('mesh8').feature('edg3').feature('dis2').set('elemcount', 'round(height_CNPs/100[nm])');
model.component('comp1').mesh('mesh8').feature('edg3').feature('dis2').set('elemratio', 10);
model.component('comp1').mesh('mesh8').feature('edg3').feature('dis2').set('symmetric', true);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').active(false);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('hmax', '0.1[um]');
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('hmin', 0.146);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('hgrad', 1.2);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh8').feature('edg3').feature('size1').set('hgradactive', false);
model.component('comp1').mesh('mesh8').feature('edg4').label('AEM');
model.component('comp1').mesh('mesh8').feature('edg4').feature('dis2').label('dist');
model.component('comp1').mesh('mesh8').feature('edg4').feature('dis2').set('type', 'predefined');
model.component('comp1').mesh('mesh8').feature('edg4').feature('dis2').set('elemcount', 'round(height_MEA/150[nm])');
model.component('comp1').mesh('mesh8').feature('edg4').feature('dis2').set('elemratio', 10);
model.component('comp1').mesh('mesh8').feature('edg4').feature('dis2').set('symmetric', true);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').active(false);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hmax', '1[um]');
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hmin', 0.0097);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hnarrow', 0.001);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh8').feature('edg4').feature('size1').set('hnarrowactive', false);
model.component('comp1').mesh('mesh8').feature('edg5').label('anode');
model.component('comp1').mesh('mesh8').feature('edg5').feature('dis2').label('dist');
model.component('comp1').mesh('mesh8').feature('edg5').feature('dis2').set('type', 'predefined');
model.component('comp1').mesh('mesh8').feature('edg5').feature('dis2').set('elemcount', 'round(height_Ni/200[nm])');
model.component('comp1').mesh('mesh8').feature('edg5').feature('dis2').set('elemratio', 10);
model.component('comp1').mesh('mesh8').feature('edg5').feature('dis2').set('symmetric', true);
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').active(false);
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').set('hmin', 0.0097);
model.component('comp1').mesh('mesh8').feature('edg5').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh8').feature('edg6').label('anolyte');
model.component('comp1').mesh('mesh8').feature('edg6').feature('dis2').label('dist');
model.component('comp1').mesh('mesh8').feature('edg6').feature('dis2').set('type', 'predefined');
model.component('comp1').mesh('mesh8').feature('edg6').feature('dis2').set('elemcount', 'round(height_elec/700[nm])');
model.component('comp1').mesh('mesh8').feature('edg6').feature('dis2').set('elemratio', 10);
model.component('comp1').mesh('mesh8').feature('edg6').feature('dis2').set('symmetric', true);
model.component('comp1').mesh('mesh8').run;

model.component('comp1').probe('dom1').label('i_CL');
model.component('comp1').probe('dom1').set('type', 'integral');
model.component('comp1').probe('dom1').set('expr', '- tcd.ivtot');
model.component('comp1').probe('dom1').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom1').set('descr', '- tcd.ivtot');
model.component('comp1').probe('dom1').set('frame', 'spatial');
model.component('comp1').probe('dom1').set('table', 'tbl3');
model.component('comp1').probe('dom1').set('window', 'window2');
model.component('comp1').probe('dom2').label('i_CNPs');
model.component('comp1').probe('dom2').set('type', 'integral');
model.component('comp1').probe('dom2').set('expr', '- tcd.ivtot');
model.component('comp1').probe('dom2').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom2').set('descr', '- tcd.ivtot');
model.component('comp1').probe('dom2').set('frame', 'spatial');
model.component('comp1').probe('dom2').set('table', 'tbl3');
model.component('comp1').probe('dom2').set('window', 'window2');
model.component('comp1').probe('dom3').label('i_C2H4');
model.component('comp1').probe('dom3').set('type', 'integral');
model.component('comp1').probe('dom3').set('expr', '-tcd.iv_per2');
model.component('comp1').probe('dom3').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom3').set('descr', '-tcd.iv_per2');
model.component('comp1').probe('dom3').set('frame', 'spatial');
model.component('comp1').probe('dom3').set('table', 'tbl3');
model.component('comp1').probe('dom3').set('window', 'window2');
model.component('comp1').probe('dom4').label('i_EtOH');
model.component('comp1').probe('dom4').set('type', 'integral');
model.component('comp1').probe('dom4').set('expr', '-tcd.iv_per6');
model.component('comp1').probe('dom4').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom4').set('descr', '-tcd.iv_per6');
model.component('comp1').probe('dom4').set('frame', 'spatial');
model.component('comp1').probe('dom4').set('table', 'tbl3');
model.component('comp1').probe('dom4').set('window', 'window2');
model.component('comp1').probe('dom5').label('i_PrOH');
model.component('comp1').probe('dom5').set('type', 'integral');
model.component('comp1').probe('dom5').set('expr', '-tcd.iv_per7');
model.component('comp1').probe('dom5').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom5').set('descr', '-tcd.iv_per7');
model.component('comp1').probe('dom5').set('frame', 'spatial');
model.component('comp1').probe('dom5').set('table', 'tbl3');
model.component('comp1').probe('dom5').set('window', 'window2');
model.component('comp1').probe('dom6').label('i_AcO');
model.component('comp1').probe('dom6').set('type', 'integral');
model.component('comp1').probe('dom6').set('expr', '-tcd.iv_per4');
model.component('comp1').probe('dom6').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom6').set('descr', '-tcd.iv_per4');
model.component('comp1').probe('dom6').set('frame', 'spatial');
model.component('comp1').probe('dom6').set('table', 'tbl3');
model.component('comp1').probe('dom6').set('window', 'window2');
model.component('comp1').probe('dom7').label('i_H2');
model.component('comp1').probe('dom7').set('type', 'integral');
model.component('comp1').probe('dom7').set('expr', '-tcd.iv_per1');
model.component('comp1').probe('dom7').set('unit', 'mA/cm^2');
model.component('comp1').probe('dom7').set('descr', '-tcd.iv_per1');
model.component('comp1').probe('dom7').set('frame', 'spatial');
model.component('comp1').probe('dom7').set('table', 'tbl3');
model.component('comp1').probe('dom7').set('window', 'window2');
model.component('comp1').probe('dom8').label('actual_T');
model.component('comp1').probe('dom8').set('expr', 'Temp2');
model.component('comp1').probe('dom8').set('unit', 'degC');
model.component('comp1').probe('dom8').set('descr', 'Temperature');
model.component('comp1').probe('dom8').set('frame', 'spatial');
model.component('comp1').probe('dom8').set('table', 'tbl3');
model.component('comp1').probe('dom8').set('window', 'window2');

model.study.create('std15');
model.study('std15').create('param5', 'Parametric');
model.study('std15').create('cdi', 'CurrentDistributionInitialization');
model.study('std15').create('stat12', 'Stationary');
model.study('std15').create('stat', 'Stationary');
model.study('std15').create('stat2', 'Stationary');
model.study('std15').create('stat3', 'Stationary');
model.study('std15').create('stat4', 'Stationary');
model.study('std15').create('stat8', 'Stationary');
model.study('std15').create('stat10', 'Stationary');
model.study('std15').create('stat5', 'Stationary');
model.study('std15').create('stat7', 'Stationary');
model.study('std15').create('stat11', 'Stationary');
model.study('std15').create('stat6', 'Stationary');
model.study('std15').create('stat9', 'Stationary');
model.study('std15').feature('cdi').set('activate', {'tds' 'on' 'tcd' 'on' 'dll' 'on' 'dlg' 'on' 'tcs' 'on'  ...
'ht3' 'on' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat12').set('activate', {'tds' 'on' 'tcd' 'off' 'dll' 'on' 'dlg' 'on' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'on' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat').set('activate', {'tds' 'on' 'tcd' 'on' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat2').set('activate', {'tds' 'on' 'tcd' 'on' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat3').set('activate', {'tds' 'on' 'tcd' 'on' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat4').set('activate', {'tds' 'on' 'tcd' 'on' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat8').set('activate', {'tds' 'on' 'tcd' 'on' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat10').set('activate', {'tds' 'on' 'tcd' 'off' 'dll' 'on' 'dlg' 'on' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat5').set('activate', {'tds' 'on' 'tcd' 'off' 'dll' 'off' 'dlg' 'off' 'tcs' 'on'  ...
'ht3' 'off' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat7').set('activate', {'tds' 'on' 'tcd' 'off' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'on' 'c2' 'off' 'frame:spatial3' 'on' 'frame:material4' 'on'});
model.study('std15').feature('stat11').set('activate', {'tds' 'off' 'tcd' 'off' 'dll' 'off' 'dlg' 'off' 'tcs' 'off'  ...
'ht3' 'off' 'c2' 'on' 'frame:spatial3' 'on' 'frame:material4' 'on'});

model.sol.create('sol966');
model.sol('sol966').study('std15');
model.sol('sol966').attach('std15');
model.sol('sol966').create('st9', 'StudyStep');
model.sol('sol966').create('v9', 'Variables');
model.sol('sol966').create('s9', 'Stationary');
model.sol('sol966').create('su8', 'StoreSolution');
model.sol('sol966').create('st13', 'StudyStep');
model.sol('sol966').create('v13', 'Variables');
model.sol('sol966').create('s13', 'Stationary');
model.sol('sol966').create('su12', 'StoreSolution');
model.sol('sol966').create('st1', 'StudyStep');
model.sol('sol966').create('v1', 'Variables');
model.sol('sol966').create('s1', 'Stationary');
model.sol('sol966').create('su1', 'StoreSolution');
model.sol('sol966').create('st2', 'StudyStep');
model.sol('sol966').create('v2', 'Variables');
model.sol('sol966').create('s2', 'Stationary');
model.sol('sol966').create('su2', 'StoreSolution');
model.sol('sol966').create('st3', 'StudyStep');
model.sol('sol966').create('v3', 'Variables');
model.sol('sol966').create('s3', 'Stationary');
model.sol('sol966').create('su3', 'StoreSolution');
model.sol('sol966').create('st4', 'StudyStep');
model.sol('sol966').create('v4', 'Variables');
model.sol('sol966').create('s4', 'Stationary');
model.sol('sol966').create('su4', 'StoreSolution');
model.sol('sol966').create('st8', 'StudyStep');
model.sol('sol966').create('v8', 'Variables');
model.sol('sol966').create('s8', 'Stationary');
model.sol('sol966').create('su7', 'StoreSolution');
model.sol('sol966').create('st11', 'StudyStep');
model.sol('sol966').create('v10', 'Variables');
model.sol('sol966').create('s11', 'Stationary');
model.sol('sol966').create('su10', 'StoreSolution');
model.sol('sol966').create('st5', 'StudyStep');
model.sol('sol966').create('v5', 'Variables');
model.sol('sol966').create('s5', 'Stationary');
model.sol('sol966').create('su5', 'StoreSolution');
model.sol('sol966').create('st7', 'StudyStep');
model.sol('sol966').create('v7', 'Variables');
model.sol('sol966').create('s7', 'Stationary');
model.sol('sol966').create('su6', 'StoreSolution');
model.sol('sol966').create('st12', 'StudyStep');
model.sol('sol966').create('v12', 'Variables');
model.sol('sol966').create('s12', 'Stationary');
model.sol('sol966').create('su11', 'StoreSolution');
model.sol('sol966').create('st6', 'StudyStep');
model.sol('sol966').create('v6', 'Variables');
model.sol('sol966').create('s6', 'Stationary');
model.sol('sol966').create('su9', 'StoreSolution');
model.sol('sol966').create('st10', 'StudyStep');
model.sol('sol966').create('v11', 'Variables');
model.sol('sol966').create('s10', 'Stationary');
model.sol('sol966').feature('s9').create('pDef', 'Parametric');
model.sol('sol966').feature('s13').create('pDef', 'Parametric');
model.sol('sol966').feature('s1').create('p1', 'Parametric');
model.sol('sol966').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol966').feature('s1').create('d1', 'Direct');
model.sol('sol966').feature('s1').create('i1', 'Iterative');
model.sol('sol966').feature('s1').create('i2', 'Iterative');
model.sol('sol966').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol966').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol966').feature('s1').feature.remove('fcDef');
model.sol('sol966').feature('s2').create('pDef', 'Parametric');
model.sol('sol966').feature('s3').create('pDef', 'Parametric');
model.sol('sol966').feature('s4').create('pDef', 'Parametric');
model.sol('sol966').feature('s8').create('pDef', 'Parametric');
model.sol('sol966').feature('s11').create('pDef', 'Parametric');
model.sol('sol966').feature('s5').create('pDef', 'Parametric');
model.sol('sol966').feature('s7').create('pDef', 'Parametric');
model.sol('sol966').feature('s12').create('pDef', 'Parametric');
model.sol('sol966').feature('s6').create('pDef', 'Parametric');
model.sol('sol966').feature('s10').create('pDef', 'Parametric');

model.batch.create('p1', 'Parametric');
model.batch.create('p2', 'Parametric');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p2').create('so1', 'Solutionseq');
model.batch('p1').study('std15');
model.batch('p2').study('std15');

model.result.dataset.create('dset460', 'Solution');
model.result.dataset.create('dset461', 'Solution');
model.result.dataset.create('int1', 'Integral');
model.result.dataset.create('int2', 'Integral');
model.result.dataset.create('int3', 'Integral');
model.result.dataset.create('int4', 'Integral');
model.result.dataset.create('int5', 'Integral');
model.result.dataset.create('int6', 'Integral');
model.result.dataset.create('int7', 'Integral');
model.result.dataset.create('avh1', 'Average');
model.result.dataset.create('dset469', 'Solution');
model.result.dataset.create('dset471', 'Solution');
model.result.dataset('dset461').set('probetag', 'dom8');
model.result.dataset('int1').set('probetag', 'dom1');
model.result.dataset('int1').set('data', 'dset461');
model.result.dataset('int1').selection.geom('geom4', 1);
model.result.dataset('int1').selection.set([2]);
model.result.dataset('int2').set('probetag', 'dom2');
model.result.dataset('int2').set('data', 'dset461');
model.result.dataset('int2').selection.geom('geom4', 1);
model.result.dataset('int2').selection.set([3]);
model.result.dataset('int3').set('probetag', 'dom3');
model.result.dataset('int3').set('data', 'dset461');
model.result.dataset('int3').selection.geom('geom4', 1);
model.result.dataset('int3').selection.set([2]);
model.result.dataset('int4').set('probetag', 'dom4');
model.result.dataset('int4').set('data', 'dset461');
model.result.dataset('int4').selection.geom('geom4', 1);
model.result.dataset('int4').selection.set([2]);
model.result.dataset('int5').set('probetag', 'dom5');
model.result.dataset('int5').set('data', 'dset461');
model.result.dataset('int5').selection.geom('geom4', 1);
model.result.dataset('int5').selection.set([2]);
model.result.dataset('int6').set('probetag', 'dom6');
model.result.dataset('int6').set('data', 'dset461');
model.result.dataset('int6').selection.geom('geom4', 1);
model.result.dataset('int6').selection.set([2]);
model.result.dataset('int7').set('probetag', 'dom7');
model.result.dataset('int7').set('data', 'dset461');
model.result.dataset('int7').selection.geom('geom4', 1);
model.result.dataset('int7').selection.set([2 3]);
model.result.dataset('avh1').set('probetag', 'dom8');
model.result.dataset('avh1').set('data', 'dset461');
model.result.dataset('avh1').selection.geom('geom4', 1);
model.result.dataset('avh1').selection.set([2 3]);
model.result.dataset('dset469').set('solution', 'sol1075');
model.result.dataset('dset471').set('solution', 'sol1077');
model.result.dataset.remove('dset1');
model.result.dataset.remove('dset2');
model.result.dataset.remove('dset3');
model.result.dataset.remove('dset4');
model.result.dataset.remove('dset5');
model.result.dataset.remove('dset6');
model.result.dataset.remove('dset7');
model.result.dataset.remove('dset8');
model.result.dataset.remove('dset9');
model.result.dataset.remove('dset10');
model.result.dataset.remove('dset11');
model.result.dataset.remove('dset12');
model.result.dataset.remove('dset13');
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical.create('pev2', 'EvalPoint');
model.result.numerical.create('pev3', 'EvalPoint');
model.result.numerical.create('pev4', 'EvalPoint');
model.result.numerical.create('pev5', 'EvalPoint');
model.result.numerical.create('pev6', 'EvalPoint');
model.result.numerical.create('pev7', 'EvalPoint');
model.result.numerical.create('pev8', 'EvalPoint');
model.result.numerical('pev1').set('probetag', 'dom1');
model.result.numerical('pev2').set('probetag', 'dom2');
model.result.numerical('pev3').set('probetag', 'dom3');
model.result.numerical('pev4').set('probetag', 'dom4');
model.result.numerical('pev5').set('probetag', 'dom5');
model.result.numerical('pev6').set('probetag', 'dom6');
model.result.numerical('pev7').set('probetag', 'dom7');
model.result.numerical('pev8').set('probetag', 'dom8');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').set('probetag', 'window2');
model.result('pg1').create('tblp1', 'Table');
model.result('pg1').feature('tblp1').set('probetag', 'dom1,dom2,dom3,dom4,dom5,dom6,dom7,dom8');
model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').create('tp1', 'TitlePage');
model.result.report('rpt1').create('toc1', 'TableOfContents');
model.result.report('rpt1').create('sec1', 'Section');
model.result.report('rpt1').create('sec2', 'Section');
model.result.report('rpt1').create('sec3', 'Section');
model.result.report('rpt1').create('sec4', 'Section');
model.result.report('rpt1').feature('sec1').create('root1', 'Model');
model.result.report('rpt1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec3', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec4', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec5', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec6', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec7', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec8', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec9', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec10', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec11', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec12', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec13', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec14', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec15', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec16', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec17', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec18', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec19', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec20', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec3').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec4').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec5').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec6').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec7').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec8').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec9').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec10').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec11').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec12').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec13').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec14').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec15').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec16').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec17').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec18').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec19').create('func1', 'Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec20').create('func1', 'Functions');
model.result.report('rpt1').feature('sec2').create('comp1', 'ModelNode');
model.result.report('rpt1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').create('sec3', 'Section');
model.result.report('rpt1').feature('sec2').create('sec4', 'Section');
model.result.report('rpt1').feature('sec2').create('sec5', 'Section');
model.result.report('rpt1').feature('sec2').create('sec6', 'Section');
model.result.report('rpt1').feature('sec2').create('sec7', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').create('var1', 'Variables');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec1').create('cpl1', 'ComponentCoupling');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec2').create('cpl1', 'ComponentCoupling');
model.result.report('rpt1').feature('sec2').feature('sec2').create('geom1', 'Geometry');
model.result.report('rpt1').feature('sec2').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').create('mat1', 'Material');
model.result.report('rpt1').feature('sec2').feature('sec4').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec2').feature('sec5').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec2').feature('sec6').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec2').feature('sec7').create('mesh1', 'Mesh');
model.result.report('rpt1').feature('sec3').create('std1', 'Study');
model.result.report('rpt1').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').create('sol1', 'Solver');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').create('sol1', 'Solver');
model.result.report('rpt1').feature('sec4').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').create('sec3', 'Section');
model.result.report('rpt1').feature('sec4').create('sec4', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec4').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec2').create('sec3', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec2').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec3').create('num1', 'DerivedValues');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec3', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec3', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec4', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec5', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec6', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec7', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec8', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec9', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec10', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec11', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec12', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec13', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec14', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec15', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec16', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec17', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec18', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec19', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec20', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec21', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec22', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec23', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec24', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').create('sec25', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').create('pg1', 'PlotGroup');

model.component('comp1').probe('dom1').genResult([]);
model.component('comp1').probe('dom2').genResult([]);
model.component('comp1').probe('dom3').genResult([]);
model.component('comp1').probe('dom4').genResult([]);
model.component('comp1').probe('dom5').genResult([]);
model.component('comp1').probe('dom6').genResult([]);
model.component('comp1').probe('dom7').genResult([]);
model.component('comp1').probe('dom8').genResult([]);

model.study('std15').feature('param5').active(false);
model.study('std15').feature('param5').label('Parametric Sweep at high TCDs');
model.study('std15').feature('param5').set('sweeptype', 'filled');
model.study('std15').feature('param5').set('pname', {'V_cath_end4'});
model.study('std15').feature('param5').set('plistarr', {'range(-2,-0.1,-3.3)'});
model.study('std15').feature('param5').set('punit', {'V'});
model.study('std15').feature('cdi').set('initType', 'secondary');
model.study('std15').feature('stat12').label('Stationary 12 - necessary before V ramp');
model.study('std15').feature('stat12').set('useinitsol', true);
model.study('std15').feature('stat12').set('initmethod', 'sol');
model.study('std15').feature('stat12').set('initstudy', 'std15');
model.study('std15').feature('stat12').set('initsol', 'sol966');
model.study('std15').feature('stat12').set('initsoluse', 'sol984');
model.study('std15').feature('stat12').set('solnum', 'last');
model.study('std15').feature('stat12').set('usesol', true);
model.study('std15').feature('stat12').set('notsolmethod', 'sol');
model.study('std15').feature('stat12').set('notstudy', 'std15');
model.study('std15').feature('stat12').set('notsol', 'sol966');
model.study('std15').feature('stat12').set('notsoluse', 'sol984');
model.study('std15').feature('stat12').set('notsolnum', 'last');
model.study('std15').feature('stat').label('Stationary 1 - for ramping up voltage');
model.study('std15').feature('stat').set('useinitsol', true);
model.study('std15').feature('stat').set('initmethod', 'sol');
model.study('std15').feature('stat').set('initstudy', 'std15');
model.study('std15').feature('stat').set('initsol', 'sol966');
model.study('std15').feature('stat').set('initsoluse', 'sol1077');
model.study('std15').feature('stat').set('solnum', 'last');
model.study('std15').feature('stat').set('usesol', true);
model.study('std15').feature('stat').set('notsolmethod', 'sol');
model.study('std15').feature('stat').set('notstudy', 'std15');
model.study('std15').feature('stat').set('notsol', 'sol966');
model.study('std15').feature('stat').set('notsoluse', 'sol1077');
model.study('std15').feature('stat').set('notsolnum', 'last');
model.study('std15').feature('stat').set('useparam', true);
model.study('std15').feature('stat').set('pname', {'V_cath'});
model.study('std15').feature('stat').set('plistarr', {'range(-0.1[V],-0.05[V],V_cath_end)'});
model.study('std15').feature('stat').set('punit', {'V'});
model.study('std15').feature('stat').set('pcontinuationmode', 'manual');
model.study('std15').feature('stat').set('pcontinuation', 'V_cath');
model.study('std15').feature('stat2').label('Stationary 2 - for ramping down alpha_Ramp');
model.study('std15').feature('stat2').set('useinitsol', true);
model.study('std15').feature('stat2').set('initmethod', 'sol');
model.study('std15').feature('stat2').set('initstudy', 'std15');
model.study('std15').feature('stat2').set('initsol', 'sol966');
model.study('std15').feature('stat2').set('initsoluse', 'sol968');
model.study('std15').feature('stat2').set('solnum', 'last');
model.study('std15').feature('stat2').set('usesol', true);
model.study('std15').feature('stat2').set('notsolmethod', 'sol');
model.study('std15').feature('stat2').set('notstudy', 'std15');
model.study('std15').feature('stat2').set('notsol', 'sol966');
model.study('std15').feature('stat2').set('notsoluse', 'sol968');
model.study('std15').feature('stat2').set('notsolnum', 'last');
model.study('std15').feature('stat2').set('useparam', true);
model.study('std15').feature('stat2').set('sweeptype', 'filled');
model.study('std15').feature('stat2').set('pname', {'V_cath' 'alpha_Ramp'});
model.study('std15').feature('stat2').set('plistarr', {'V_cath_end' 'range(alpha_Ramp_initial,-0.01,1.1)'});
model.study('std15').feature('stat2').set('punit', {'V' ''});
model.study('std15').feature('stat2').set('pcontinuationmode', 'manual');
model.study('std15').feature('stat2').set('pcontinuation', 'alpha_Ramp');
model.study('std15').feature('stat3').label('Stationary 3 - for further ramping down alpha_Ramp');
model.study('std15').feature('stat3').set('useinitsol', true);
model.study('std15').feature('stat3').set('initmethod', 'sol');
model.study('std15').feature('stat3').set('initstudy', 'std15');
model.study('std15').feature('stat3').set('initsol', 'sol966');
model.study('std15').feature('stat3').set('initsoluse', 'sol969');
model.study('std15').feature('stat3').set('solnum', 'last');
model.study('std15').feature('stat3').set('usesol', true);
model.study('std15').feature('stat3').set('notsolmethod', 'sol');
model.study('std15').feature('stat3').set('notstudy', 'std15');
model.study('std15').feature('stat3').set('notsol', 'sol966');
model.study('std15').feature('stat3').set('notsoluse', 'sol969');
model.study('std15').feature('stat3').set('notsolnum', 'last');
model.study('std15').feature('stat3').set('useparam', true);
model.study('std15').feature('stat3').set('sweeptype', 'filled');
model.study('std15').feature('stat3').set('pname', {'V_cath' 'alpha_Ramp'});
model.study('std15').feature('stat3').set('plistarr', {'V_cath_end' 'range(1.1,-0.001,1)'});
model.study('std15').feature('stat3').set('punit', {'V' ''});
model.study('std15').feature('stat3').set('pcontinuationmode', 'manual');
model.study('std15').feature('stat3').set('pcontinuation', 'alpha_Ramp');
model.study('std15').feature('stat4').label('Stationary 4 - for further ramping up voltage');
model.study('std15').feature('stat4').set('useinitsol', true);
model.study('std15').feature('stat4').set('initmethod', 'sol');
model.study('std15').feature('stat4').set('initstudy', 'std15');
model.study('std15').feature('stat4').set('initsol', 'sol966');
model.study('std15').feature('stat4').set('initsoluse', 'sol970');
model.study('std15').feature('stat4').set('solnum', 'last');
model.study('std15').feature('stat4').set('usesol', true);
model.study('std15').feature('stat4').set('notsolmethod', 'sol');
model.study('std15').feature('stat4').set('notstudy', 'std15');
model.study('std15').feature('stat4').set('notsol', 'sol966');
model.study('std15').feature('stat4').set('notsoluse', 'sol970');
model.study('std15').feature('stat4').set('notsolnum', 'last');
model.study('std15').feature('stat4').set('useparam', true);
model.study('std15').feature('stat4').set('sweeptype', 'filled');
model.study('std15').feature('stat4').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat4').set('plistarr', {'1' 'range(V_cath_end,-0.01[V],V_cath_end2)'});
model.study('std15').feature('stat4').set('punit', {'' 'V'});
model.study('std15').feature('stat4').set('pcontinuationmode', 'manual');
model.study('std15').feature('stat4').set('pcontinuation', 'V_cath');
model.study('std15').feature('stat8').label('Stationary 5 - for ramping voltage to -3V');
model.study('std15').feature('stat8').set('useinitsol', true);
model.study('std15').feature('stat8').set('initmethod', 'sol');
model.study('std15').feature('stat8').set('initstudy', 'std15');
model.study('std15').feature('stat8').set('initsol', 'sol966');
model.study('std15').feature('stat8').set('initsoluse', 'sol973');
model.study('std15').feature('stat8').set('solnum', 'last');
model.study('std15').feature('stat8').set('usesol', true);
model.study('std15').feature('stat8').set('notsolmethod', 'sol');
model.study('std15').feature('stat8').set('notstudy', 'std15');
model.study('std15').feature('stat8').set('notsol', 'sol966');
model.study('std15').feature('stat8').set('notsoluse', 'sol973');
model.study('std15').feature('stat8').set('notsolnum', 'last');
model.study('std15').feature('stat8').set('useparam', true);
model.study('std15').feature('stat8').set('sweeptype', 'filled');
model.study('std15').feature('stat8').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat8').set('plistarr', {'1' 'range(V_cath_end2,-0.01[V],V_cath_end3)'});
model.study('std15').feature('stat8').set('punit', {'' 'V'});
model.study('std15').feature('stat8').set('pcontinuationmode', 'manual');
model.study('std15').feature('stat8').set('pcontinuation', 'V_cath');
model.study('std15').feature('stat10').label('Stationary 10 - for Darcys');
model.study('std15').feature('stat5').label('Stationary 6 - for gas transport');
model.study('std15').feature('stat5').set('useinitsol', true);
model.study('std15').feature('stat5').set('initmethod', 'sol');
model.study('std15').feature('stat5').set('initstudy', 'std15');
model.study('std15').feature('stat5').set('initsol', 'sol966');
model.study('std15').feature('stat5').set('initsoluse', 'sol998');
model.study('std15').feature('stat5').set('solnum', 'last');
model.study('std15').feature('stat5').set('usesol', true);
model.study('std15').feature('stat5').set('notsolmethod', 'sol');
model.study('std15').feature('stat5').set('notstudy', 'std15');
model.study('std15').feature('stat5').set('notsol', 'sol966');
model.study('std15').feature('stat5').set('notsoluse', 'sol998');
model.study('std15').feature('stat5').set('notsolnum', 'last');
model.study('std15').feature('stat5').set('useparam', true);
model.study('std15').feature('stat5').set('sweeptype', 'filled');
model.study('std15').feature('stat5').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat5').set('plistarr', {'1' 'V_cath_end3'});
model.study('std15').feature('stat5').set('punit', {'' 'V'});
model.study('std15').feature('stat7').label('Stationary 7 - Heat transfer');
model.study('std15').feature('stat7').set('useinitsol', true);
model.study('std15').feature('stat7').set('initmethod', 'sol');
model.study('std15').feature('stat7').set('initstudy', 'std15');
model.study('std15').feature('stat7').set('initsol', 'sol966');
model.study('std15').feature('stat7').set('initsoluse', 'sol974');
model.study('std15').feature('stat7').set('solnum', 'last');
model.study('std15').feature('stat7').set('usesol', true);
model.study('std15').feature('stat7').set('notsolmethod', 'sol');
model.study('std15').feature('stat7').set('notstudy', 'std15');
model.study('std15').feature('stat7').set('notsol', 'sol966');
model.study('std15').feature('stat7').set('notsoluse', 'sol974');
model.study('std15').feature('stat7').set('notsolnum', 'last');
model.study('std15').feature('stat7').set('useparam', true);
model.study('std15').feature('stat7').set('sweeptype', 'filled');
model.study('std15').feature('stat7').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat7').set('plistarr', {'1' 'V_cath_end3'});
model.study('std15').feature('stat7').set('punit', {'' 'V'});
model.study('std15').feature('stat11').label('Stationary - Liquid water activity');
model.study('std15').feature('stat11').set('useparam', true);
model.study('std15').feature('stat11').set('sweeptype', 'filled');
model.study('std15').feature('stat11').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat11').set('plistarr', {'1' 'V_cath_end3'});
model.study('std15').feature('stat11').set('punit', {'' 'V'});
model.study('std15').feature('stat6').label('Stationary 8 - All Physics');
model.study('std15').feature('stat6').set('useparam', true);
model.study('std15').feature('stat6').set('sweeptype', 'filled');
model.study('std15').feature('stat6').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat6').set('plistarr', {'1' 'V_cath_end3'});
model.study('std15').feature('stat6').set('punit', {'' 'V'});
model.study('std15').feature('stat9').label('Stationary 9 - All Physics with voltage ramp');
model.study('std15').feature('stat9').set('useinitsol', true);
model.study('std15').feature('stat9').set('initmethod', 'sol');
model.study('std15').feature('stat9').set('initstudy', 'std15');
model.study('std15').feature('stat9').set('initsol', 'sol966');
model.study('std15').feature('stat9').set('initsoluse', 'sol985');
model.study('std15').feature('stat9').set('solnum', 'last');
model.study('std15').feature('stat9').set('usesol', true);
model.study('std15').feature('stat9').set('notsolmethod', 'sol');
model.study('std15').feature('stat9').set('notstudy', 'std15');
model.study('std15').feature('stat9').set('notsol', 'sol966');
model.study('std15').feature('stat9').set('notsoluse', 'sol985');
model.study('std15').feature('stat9').set('notsolnum', 'last');
model.study('std15').feature('stat9').set('useparam', true);
model.study('std15').feature('stat9').set('sweeptype', 'filled');
model.study('std15').feature('stat9').set('pname', {'alpha_Ramp' 'V_cath'});
model.study('std15').feature('stat9').set('plistarr', {'1' 'range(V_cath_end3,-0.01[V],V_cath_end4)'});
model.study('std15').feature('stat9').set('punit', {'' 'V'});
model.study('std15').feature('stat9').set('pcontinuationmode', 'manual');
model.study('std15').feature('stat9').set('pcontinuation', 'V_cath');

model.sol('sol966').attach('std15');
model.sol('sol966').feature('st9').label('Compile Equations: Current Distribution Initialization');
model.sol('sol966').feature('v9').label('Dependent Variables 9.1');
model.sol('sol966').feature('v9').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v9').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v9').set('clist', {'1' 'V_cath_end3'});
model.sol('sol966').feature('v9').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v9').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s9').label('Stationary Solver 9.1');
model.sol('sol966').feature('s9').set('control', 'user');
model.sol('sol966').feature('s9').set('probesel', 'none');
model.sol('sol966').feature('s9').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s9').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s9').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s9').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s9').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s9').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s9').feature('pDef').set('control', 'user');
model.sol('sol966').feature('s9').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s9').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s9').feature('pDef').set('plistarr', {'1' 'V_cath_end3'});
model.sol('sol966').feature('s9').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s9').feature('pDef').set('pcontinuationmode', 'no');
model.sol('sol966').feature('s9').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su8').label('Solution Store 1.1');
model.sol('sol966').feature('st13').label('Compile Equations: Stationary 12 - necessary before V ramp');
model.sol('sol966').feature('st13').set('studystep', 'stat12');
model.sol('sol966').feature('v13').label('Dependent Variables 13  - necessary before V ramp');
model.sol('sol966').feature('v13').set('initmethod', 'sol');
model.sol('sol966').feature('v13').set('initsol', 'sol966');
model.sol('sol966').feature('v13').set('initsoluse', 'sol984');
model.sol('sol966').feature('v13').set('solnum', 'last');
model.sol('sol966').feature('v13').set('notsolmethod', 'sol');
model.sol('sol966').feature('v13').set('notsol', 'sol966');
model.sol('sol966').feature('v13').set('notsoluse', 'sol984');
model.sol('sol966').feature('v13').set('notsolnum', 'last');
model.sol('sol966').feature('v13').set('clistctrl', {'pDef'});
model.sol('sol966').feature('v13').set('cname', {'V_cath_end4'});
model.sol('sol966').feature('v13').set('clist', {'-2.5[V] -2.7[V] -2.9[V]'});
model.sol('sol966').feature('v13').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('v13').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('s13').label('Stationary Solver 13  - necessary before V ramp');
model.sol('sol966').feature('s13').set('control', 'user');
model.sol('sol966').feature('s13').set('probesel', 'none');
model.sol('sol966').feature('s13').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s13').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s13').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s13').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s13').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s13').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s13').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s13').feature('pDef').set('control', 'user');
model.sol('sol966').feature('s13').feature('pDef').set('pname', {'V_cath_end4'});
model.sol('sol966').feature('s13').feature('pDef').set('plistarr', {'-2.5,-2.7,-2.9'});
model.sol('sol966').feature('s13').feature('pDef').set('punit', {'V'});
model.sol('sol966').feature('s13').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su12').label('Solution Store 12');
model.sol('sol966').feature('st1').label('Compile Equations: Stationary 1 - for ramping up voltage');
model.sol('sol966').feature('st1').set('studystep', 'stat');
model.sol('sol966').feature('v1').label('Dependent Variables 1 - for ramping up voltage');
model.sol('sol966').feature('v1').set('initmethod', 'sol');
model.sol('sol966').feature('v1').set('initsol', 'sol966');
model.sol('sol966').feature('v1').set('initsoluse', 'sol1077');
model.sol('sol966').feature('v1').set('solnum', 'last');
model.sol('sol966').feature('v1').set('notsolmethod', 'sol');
model.sol('sol966').feature('v1').set('notsol', 'sol966');
model.sol('sol966').feature('v1').set('notsoluse', 'sol1077');
model.sol('sol966').feature('v1').set('notsolnum', 'last');
model.sol('sol966').feature('v1').set('clistctrl', {'p1'});
model.sol('sol966').feature('v1').set('cname', {'V_cath'});
model.sol('sol966').feature('v1').set('clist', {'range(-0.1[V],-0.05[V],V_cath_end)'});
model.sol('sol966').feature('v1').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v1').feature('comp1_phil').set('scaleval', 1);
model.sol('sol966').feature('s1').label('Stationary Solver 1 - for ramping up voltage');
model.sol('sol966').feature('s1').set('control', 'user');
model.sol('sol966').feature('s1').set('stol', '1.0E-3');
model.sol('sol966').feature('s1').set('probesel', 'none');
model.sol('sol966').feature('s1').feature('dDef').label('Direct 2');
model.sol('sol966').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s1').feature('p1').label('Parametric 1.1');
model.sol('sol966').feature('s1').feature('p1').set('pname', {'V_cath'});
model.sol('sol966').feature('s1').feature('p1').set('plistarr', {'range(-0.1[V],-0.05[V],V_cath_end)'});
model.sol('sol966').feature('s1').feature('p1').set('punit', {'V'});
model.sol('sol966').feature('s1').feature('p1').set('pcontinuationmode', 'manual');
model.sol('sol966').feature('s1').feature('p1').set('pcontinuation', 'V_cath');
model.sol('sol966').feature('s1').feature('p1').set('porder', 'constant');
model.sol('sol966').feature('s1').feature('p1').set('uselsqdata', false);
model.sol('sol966').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol966').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol966').feature('s1').feature('fc1').set('minstep', 1.0E-6);
model.sol('sol966').feature('s1').feature('fc1').set('ntermauto', 'itertol');
model.sol('sol966').feature('s1').feature('fc1').set('niter', 100);
model.sol('sol966').feature('s1').feature('d1').label('Direct (tcd)');
model.sol('sol966').feature('s1').feature('i1').label('Algebraic Multigrid (tcd)');
model.sol('sol966').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol966').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol966').feature('s1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol966').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol966').feature('s1').feature('i2').label('Geometric Multigrid (tcd)');
model.sol('sol966').feature('s1').feature('i2').set('nlinnormuse', true);
model.sol('sol966').feature('s1').feature('i2').set('maxlinit', 1000);
model.sol('sol966').feature('s1').feature('i2').feature('ilDef').label('Incomplete LU 1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').label('Multigrid 1.1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol966').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol966').feature('su1').label('Solution Store 2.1');
model.sol('sol966').feature('st2').label('Compile Equations: Stationary 2 - for ramping down alpha_Ramp');
model.sol('sol966').feature('st2').set('studystep', 'stat2');
model.sol('sol966').feature('v2').label('Dependent Variables 2  - for ramping down alpha_Ramp');
model.sol('sol966').feature('v2').set('initmethod', 'sol');
model.sol('sol966').feature('v2').set('initsol', 'sol966');
model.sol('sol966').feature('v2').set('initsoluse', 'sol968');
model.sol('sol966').feature('v2').set('solnum', 'last');
model.sol('sol966').feature('v2').set('notsolmethod', 'sol');
model.sol('sol966').feature('v2').set('notsol', 'sol966');
model.sol('sol966').feature('v2').set('notsoluse', 'sol968');
model.sol('sol966').feature('v2').set('notsolnum', 'last');
model.sol('sol966').feature('v2').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v2').set('cname', {'V_cath' 'alpha_Ramp'});
model.sol('sol966').feature('v2').set('clist', {'V_cath_end' 'range(alpha_Ramp_initial,-0.01,1.1)'});
model.sol('sol966').feature('v2').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v2').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s2').label('Stationary Solver 2 - for ramping down alpha_Ramp');
model.sol('sol966').feature('s2').set('control', 'user');
model.sol('sol966').feature('s2').set('probesel', 'none');
model.sol('sol966').feature('s2').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s2').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s2').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s2').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s2').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s2').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s2').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s2').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s2').feature('pDef').set('pname', {'V_cath' 'alpha_Ramp'});
model.sol('sol966').feature('s2').feature('pDef').set('plistarr', {'V_cath_end' 'range(alpha_Ramp_initial,-0.01,1.1)'});
model.sol('sol966').feature('s2').feature('pDef').set('punit', {'V' ''});
model.sol('sol966').feature('s2').feature('pDef').set('pcontinuationmode', 'manual');
model.sol('sol966').feature('s2').feature('pDef').set('pcontinuation', 'alpha_Ramp');
model.sol('sol966').feature('s2').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su2').label('Solution Store 3.1');
model.sol('sol966').feature('st3').label('Compile Equations: Stationary 3 - for further ramping down alpha_Ramp');
model.sol('sol966').feature('st3').set('studystep', 'stat3');
model.sol('sol966').feature('v3').label('Dependent Variables 3 - for further ramping down alpha_Ramp');
model.sol('sol966').feature('v3').set('initmethod', 'sol');
model.sol('sol966').feature('v3').set('initsol', 'sol966');
model.sol('sol966').feature('v3').set('initsoluse', 'sol969');
model.sol('sol966').feature('v3').set('solnum', 'last');
model.sol('sol966').feature('v3').set('notsolmethod', 'sol');
model.sol('sol966').feature('v3').set('notsol', 'sol966');
model.sol('sol966').feature('v3').set('notsoluse', 'sol969');
model.sol('sol966').feature('v3').set('notsolnum', 'last');
model.sol('sol966').feature('v3').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v3').set('cname', {'V_cath' 'alpha_Ramp'});
model.sol('sol966').feature('v3').set('clist', {'V_cath_end' 'range(1.1,-0.001,1)'});
model.sol('sol966').feature('v3').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v3').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s3').label('Stationary Solver 3 - for further ramping down alpha_Ramp');
model.sol('sol966').feature('s3').set('control', 'user');
model.sol('sol966').feature('s3').set('probesel', 'none');
model.sol('sol966').feature('s3').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s3').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s3').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s3').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s3').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s3').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s3').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s3').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s3').feature('pDef').set('pname', {'V_cath' 'alpha_Ramp'});
model.sol('sol966').feature('s3').feature('pDef').set('plistarr', {'V_cath_end' 'range(1.1,-0.001,1)'});
model.sol('sol966').feature('s3').feature('pDef').set('punit', {'V' ''});
model.sol('sol966').feature('s3').feature('pDef').set('pcontinuationmode', 'manual');
model.sol('sol966').feature('s3').feature('pDef').set('pcontinuation', 'alpha_Ramp');
model.sol('sol966').feature('s3').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su3').label('Solution Store 4.1');
model.sol('sol966').feature('st4').label('Compile Equations: Stationary 1 - for further ramping up voltage');
model.sol('sol966').feature('st4').set('studystep', 'stat4');
model.sol('sol966').feature('v4').label('Dependent Variables 4 - for further ramping up voltage');
model.sol('sol966').feature('v4').set('initmethod', 'sol');
model.sol('sol966').feature('v4').set('initsol', 'sol966');
model.sol('sol966').feature('v4').set('initsoluse', 'sol970');
model.sol('sol966').feature('v4').set('solnum', 'last');
model.sol('sol966').feature('v4').set('notsolmethod', 'sol');
model.sol('sol966').feature('v4').set('notsol', 'sol966');
model.sol('sol966').feature('v4').set('notsoluse', 'sol970');
model.sol('sol966').feature('v4').set('notsolnum', 'last');
model.sol('sol966').feature('v4').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v4').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v4').set('clist', {'1' 'range(V_cath_end,-0.01[V],V_cath_end2)'});
model.sol('sol966').feature('v4').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v4').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s4').label('Stationary Solver 4 - for further ramping up voltage');
model.sol('sol966').feature('s4').set('control', 'user');
model.sol('sol966').feature('s4').set('probesel', 'none');
model.sol('sol966').feature('s4').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s4').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s4').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s4').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s4').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s4').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s4').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s4').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s4').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s4').feature('pDef').set('plistarr', {'1' 'range(V_cath_end,-0.01[V],V_cath_end2)'});
model.sol('sol966').feature('s4').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s4').feature('pDef').set('pcontinuationmode', 'manual');
model.sol('sol966').feature('s4').feature('pDef').set('pcontinuation', 'V_cath');
model.sol('sol966').feature('s4').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su4').label('Solution Store 5.1');
model.sol('sol966').feature('su4').set('sol', 'sol973');
model.sol('sol966').feature('st8').label('Compile Equations: Stationary 5 - for ramping voltage to -3V');
model.sol('sol966').feature('st8').set('studystep', 'stat8');
model.sol('sol966').feature('v8').label('Dependent Variables 5 - for ramping voltage to -3V');
model.sol('sol966').feature('v8').set('initmethod', 'sol');
model.sol('sol966').feature('v8').set('initsol', 'sol966');
model.sol('sol966').feature('v8').set('initsoluse', 'sol973');
model.sol('sol966').feature('v8').set('solnum', 'last');
model.sol('sol966').feature('v8').set('notsolmethod', 'sol');
model.sol('sol966').feature('v8').set('notsol', 'sol966');
model.sol('sol966').feature('v8').set('notsoluse', 'sol973');
model.sol('sol966').feature('v8').set('notsolnum', 'last');
model.sol('sol966').feature('v8').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v8').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v8').set('clist', {'1' 'range(V_cath_end2,-0.01[V],V_cath_end3)'});
model.sol('sol966').feature('v8').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v8').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s8').label('Stationary Solver 5 - for ramping voltage to -3V');
model.sol('sol966').feature('s8').set('control', 'user');
model.sol('sol966').feature('s8').set('probesel', 'none');
model.sol('sol966').feature('s8').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s8').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s8').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s8').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s8').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s8').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s8').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s8').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s8').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s8').feature('pDef').set('plistarr', {'1' 'range(V_cath_end2,-0.01[V],V_cath_end3)'});
model.sol('sol966').feature('s8').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s8').feature('pDef').set('pcontinuationmode', 'manual');
model.sol('sol966').feature('s8').feature('pDef').set('pcontinuation', 'V_cath');
model.sol('sol966').feature('s8').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su7').label('Solution Store 6.1');
model.sol('sol966').feature('st11').label('Compile Equations: Stationary 10 - for Darcys');
model.sol('sol966').feature('st11').set('studystep', 'stat10');
model.sol('sol966').feature('v10').label('Dependent Variables 10 - for Darcys');
model.sol('sol966').feature('v10').set('initmethod', 'sol');
model.sol('sol966').feature('v10').set('initsol', 'sol966');
model.sol('sol966').feature('v10').set('initsoluse', 'sol983');
model.sol('sol966').feature('v10').set('solnum', 'auto');
model.sol('sol966').feature('v10').set('notsolmethod', 'sol');
model.sol('sol966').feature('v10').set('notsol', 'sol966');
model.sol('sol966').feature('v10').set('notsolnum', 'auto');
model.sol('sol966').feature('v10').set('clistctrl', {'pDef'});
model.sol('sol966').feature('v10').set('cname', {'V_cath_end4'});
model.sol('sol966').feature('v10').set('clist', {'-2.5[V] -2.7[V] -2.9[V]'});
model.sol('sol966').feature('v10').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v10').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s11').label('Stationary Solver 11 - for Darcys');
model.sol('sol966').feature('s11').set('control', 'user');
model.sol('sol966').feature('s11').set('probesel', 'none');
model.sol('sol966').feature('s11').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s11').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s11').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s11').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s11').feature('pDef').set('control', 'user');
model.sol('sol966').feature('s11').feature('pDef').set('pname', {'V_cath_end4'});
model.sol('sol966').feature('s11').feature('pDef').set('plistarr', {'-2.5,-2.7,-2.9'});
model.sol('sol966').feature('s11').feature('pDef').set('punit', {'V'});
model.sol('sol966').feature('s11').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su10').label('Solution Store 10.1');
model.sol('sol966').feature('st5').label('Compile Equations: Stationary 6 - for gas transport');
model.sol('sol966').feature('st5').set('studystep', 'stat5');
model.sol('sol966').feature('v5').label('Dependent Variables 6 - for gas transport');
model.sol('sol966').feature('v5').set('initmethod', 'sol');
model.sol('sol966').feature('v5').set('initsol', 'sol966');
model.sol('sol966').feature('v5').set('initsoluse', 'sol998');
model.sol('sol966').feature('v5').set('solnum', 'last');
model.sol('sol966').feature('v5').set('notsolmethod', 'sol');
model.sol('sol966').feature('v5').set('notsol', 'sol966');
model.sol('sol966').feature('v5').set('notsoluse', 'sol998');
model.sol('sol966').feature('v5').set('notsolnum', 'last');
model.sol('sol966').feature('v5').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v5').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v5').set('clist', {'1' 'V_cath_end3'});
model.sol('sol966').feature('v5').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v5').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s5').label('Stationary Solver 6 - for gas transport');
model.sol('sol966').feature('s5').set('control', 'user');
model.sol('sol966').feature('s5').set('probesel', 'none');
model.sol('sol966').feature('s5').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s5').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s5').feature('fcDef').set('initstep', 0.1);
model.sol('sol966').feature('s5').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s5').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s5').feature('fcDef').set('niter', 200);
model.sol('sol966').feature('s5').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s5').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s5').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s5').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s5').feature('pDef').set('plistarr', {'1' 'V_cath_end3'});
model.sol('sol966').feature('s5').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s5').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su5').label('Solution Store 7');
model.sol('sol966').feature('st7').label('Compile Equations: Stationary 7 - Heat transfer');
model.sol('sol966').feature('st7').set('studystep', 'stat7');
model.sol('sol966').feature('v7').label('Dependent Variables 7 - Heat transfer');
model.sol('sol966').feature('v7').set('initmethod', 'sol');
model.sol('sol966').feature('v7').set('initsol', 'sol966');
model.sol('sol966').feature('v7').set('initsoluse', 'sol974');
model.sol('sol966').feature('v7').set('solnum', 'last');
model.sol('sol966').feature('v7').set('notsolmethod', 'sol');
model.sol('sol966').feature('v7').set('notsol', 'sol966');
model.sol('sol966').feature('v7').set('notsoluse', 'sol974');
model.sol('sol966').feature('v7').set('notsolnum', 'last');
model.sol('sol966').feature('v7').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v7').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v7').set('clist', {'1' 'V_cath_end3'});
model.sol('sol966').feature('v7').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v7').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s7').label('Stationary Solver 7 - Heat transfer');
model.sol('sol966').feature('s7').set('control', 'user');
model.sol('sol966').feature('s7').set('probesel', 'none');
model.sol('sol966').feature('s7').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s7').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s7').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s7').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s7').feature('fcDef').set('niter', 200);
model.sol('sol966').feature('s7').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s7').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s7').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s7').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s7').feature('pDef').set('plistarr', {'1' 'V_cath_end3'});
model.sol('sol966').feature('s7').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s7').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su6').label('Solution Store 8.1');
model.sol('sol966').feature('st12').label('Compile Equations: Stationary - Liquid water activity');
model.sol('sol966').feature('st12').set('studystep', 'stat11');
model.sol('sol966').feature('v12').label('Dependent Variables 12  - Liquid water activity');
model.sol('sol966').feature('v12').set('initmethod', 'sol');
model.sol('sol966').feature('v12').set('initsol', 'sol966');
model.sol('sol966').feature('v12').set('initsoluse', 'sol1077');
model.sol('sol966').feature('v12').set('solnum', 'auto');
model.sol('sol966').feature('v12').set('notsolmethod', 'sol');
model.sol('sol966').feature('v12').set('notsol', 'sol966');
model.sol('sol966').feature('v12').set('notsolnum', 'auto');
model.sol('sol966').feature('v12').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v12').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v12').set('clist', {'1' 'V_cath_end3'});
model.sol('sol966').feature('v12').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('v12').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('s12').label('Stationary Solver 12 -  Liquid water activity');
model.sol('sol966').feature('s12').set('control', 'user');
model.sol('sol966').feature('s12').set('probesel', 'none');
model.sol('sol966').feature('s12').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s12').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s12').feature('fcDef').set('minstep', 1.0E-12);
model.sol('sol966').feature('s12').feature('fcDef').set('ntermauto', 'itertol');
model.sol('sol966').feature('s12').feature('fcDef').set('niter', 100);
model.sol('sol966').feature('s12').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s12').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s12').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s12').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s12').feature('pDef').set('plistarr', {'1' 'V_cath_end3'});
model.sol('sol966').feature('s12').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s12').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su11').label('Solution Store 11');
model.sol('sol966').feature('st6').label('Compile Equations: Stationary 8 - All Physics');
model.sol('sol966').feature('st6').set('studystep', 'stat6');
model.sol('sol966').feature('v6').label('Dependent Variables 8 - All Physics');
model.sol('sol966').feature('v6').set('initmethod', 'sol');
model.sol('sol966').feature('v6').set('initsol', 'sol966');
model.sol('sol966').feature('v6').set('initsoluse', 'sol1075');
model.sol('sol966').feature('v6').set('solnum', 'auto');
model.sol('sol966').feature('v6').set('notsolmethod', 'sol');
model.sol('sol966').feature('v6').set('notsol', 'sol966');
model.sol('sol966').feature('v6').set('notsolnum', 'auto');
model.sol('sol966').feature('v6').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v6').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v6').set('clist', {'1' 'V_cath_end3'});
model.sol('sol966').feature('v6').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v6').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s6').label('Stationary Solver 8 - All Physics');
model.sol('sol966').feature('s6').set('control', 'user');
model.sol('sol966').feature('s6').set('probesel', 'none');
model.sol('sol966').feature('s6').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s6').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s6').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s6').feature('fcDef').set('maxiter', 200);
model.sol('sol966').feature('s6').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s6').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s6').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s6').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s6').feature('pDef').set('plistarr', {'1' 'V_cath_end3'});
model.sol('sol966').feature('s6').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s6').feature('pDef').set('uselsqdata', false);
model.sol('sol966').feature('su9').label('Solution Store 9');
model.sol('sol966').feature('st10').label('Compile Equations: Stationary 9 - All Physics with voltage ramp');
model.sol('sol966').feature('st10').set('studystep', 'stat9');
model.sol('sol966').feature('v11').label('Dependent Variables 11 - All Physics with voltage ramp');
model.sol('sol966').feature('v11').set('initmethod', 'sol');
model.sol('sol966').feature('v11').set('initsol', 'sol966');
model.sol('sol966').feature('v11').set('initsoluse', 'sol985');
model.sol('sol966').feature('v11').set('solnum', 'last');
model.sol('sol966').feature('v11').set('notsolmethod', 'sol');
model.sol('sol966').feature('v11').set('notsol', 'sol966');
model.sol('sol966').feature('v11').set('notsoluse', 'sol985');
model.sol('sol966').feature('v11').set('notsolnum', 'last');
model.sol('sol966').feature('v11').set('clistctrl', {'pDef' 'pDef'});
model.sol('sol966').feature('v11').set('cname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('v11').set('clist', {'1' 'range(V_cath_end3,-0.01[V],V_cath_end4)'});
model.sol('sol966').feature('v11').feature('comp1_phil').set('scalemethod', 'manual');
model.sol('sol966').feature('v11').feature('comp1_Cw').set('scalemethod', 'manual');
model.sol('sol966').feature('s10').label('Stationary Solver 10 - All Physics with voltage ramp');
model.sol('sol966').feature('s10').set('control', 'user');
model.sol('sol966').feature('s10').set('probesel', 'none');
model.sol('sol966').feature('s10').feature('dDef').label('Direct 1');
model.sol('sol966').feature('s10').feature('fcDef').label('Fully Coupled 1');
model.sol('sol966').feature('s10').feature('fcDef').set('minstep', 1.0E-6);
model.sol('sol966').feature('s10').feature('fcDef').set('maxiter', 200);
model.sol('sol966').feature('s10').feature('aDef').label('Advanced 1');
model.sol('sol966').feature('s10').feature('pDef').label('Parametric 1');
model.sol('sol966').feature('s10').feature('pDef').set('sweeptype', 'filled');
model.sol('sol966').feature('s10').feature('pDef').set('pname', {'alpha_Ramp' 'V_cath'});
model.sol('sol966').feature('s10').feature('pDef').set('plistarr', {'1' 'range(V_cath_end3,-0.01[V],V_cath_end4)'});
model.sol('sol966').feature('s10').feature('pDef').set('punit', {'' 'V'});
model.sol('sol966').feature('s10').feature('pDef').set('pcontinuationmode', 'manual');
model.sol('sol966').feature('s10').feature('pDef').set('pcontinuation', 'V_cath');
model.sol('sol966').feature('s10').feature('pDef').set('uselsqdata', false);
model.sol('sol966').runAll;

model.batch('p1').set('pname', {'V_cath_end4' 'i_exp_PrOH' 'i_exp_EtOH' 'i_exp_H2' 'i_exp_AcO'});
model.batch('p1').set('plistarr', {'-2.5,-2.7,-2.9' '-13.5, -18.6, -28.5' '-18.7, -40.6, -59.2' '-22.5, -32.7, -40.7' '-11.9, -17.4, -26.65'});
model.batch('p1').set('punit', {'V' 'mA/cm^2' 'mA/cm^2' 'mA/cm^2' 'mA/cm^2'});
model.batch('p1').set('err', true);
model.batch('p1').feature('so1').set('seq', 'sol966');
model.batch('p1').feature('so1').set('store', true);
model.batch('p1').feature('so1').set('keeprom', true);
model.batch('p1').feature('so1').set('param', {'"V_cath_end4","-2.2","i_exp_H2","-87","i_exp_EtOH","-48","i_exp_C2H4","-70","i_exp_AcO","-65"' '"V_cath_end4","-2.5","i_exp_H2","-225","i_exp_EtOH","-187","i_exp_C2H4","-396","i_exp_AcO","-119"' '"V_cath_end4","-2.7","i_exp_H2","-327","i_exp_EtOH","-406","i_exp_C2H4","-950","i_exp_AcO","-174"' '"V_cath_end4","-2.9","i_exp_H2","-405","i_exp_EtOH","-592","i_exp_C2H4","-1598","i_exp_AcO","-266.5"'});
model.batch('p1').run;
model.batch('p2').set('control', 'param5');
model.batch('p2').set('sweeptype', 'filled');
model.batch('p2').set('pname', {'V_cath_end4'});
model.batch('p2').set('plistarr', {'range(-2,-0.1,-3.3)'});
model.batch('p2').set('punit', {'V'});
model.batch('p2').set('err', true);
model.batch('p2').feature('so1').set('seq', 'sol966');
model.batch('p2').feature('so1').set('param', {'"V_cath_end4","-2"' '"V_cath_end4","-2.1"' '"V_cath_end4","-2.2"' '"V_cath_end4","-2.3"' '"V_cath_end4","-2.4"' '"V_cath_end4","-2.5"' '"V_cath_end4","-2.6"' '"V_cath_end4","-2.7"' '"V_cath_end4","-2.8"' '"V_cath_end4","-2.9"'  ...
'"V_cath_end4","-3"' '"V_cath_end4","-3.1"' '"V_cath_end4","-3.2"' '"V_cath_end4","-3.3"'});
model.batch('p2').run;

model.result.dataset('dset461').label('Probe Solution 461');
model.result.dataset('dset461').set('frametype', 'spatial');
model.result.dataset('int1').set('data', 'dset461');
model.result.dataset('int2').set('data', 'dset461');
model.result.dataset('int3').set('data', 'dset461');
model.result.dataset('int4').set('data', 'dset461');
model.result.dataset('int5').set('data', 'dset461');
model.result.dataset('int6').set('data', 'dset461');
model.result.dataset('int7').set('data', 'dset461');
model.result.dataset('avh1').set('data', 'dset461');
model.result.dataset.remove('dset472');
model.result('pg1').label('Probe Plot Group 1');
model.result('pg1').set('xlabel', 'V_cath (V)');
model.result('pg1').set('windowtitle', 'Probe Plot 2');
model.result('pg1').set('xlabelactive', false);
model.result('pg1').feature('tblp1').label('Probe Table Graph 1');
model.result('pg1').feature('tblp1').set('legend', true);
model.result.report('rpt1').set('templatesource', 'complete');
model.result.report('rpt1').set('format', 'docx');
model.result.report('rpt1').set('filename', 'H:\My Documents\Google Drive\Sinton (Drive)\New_files\20191021_MEA_model_clean\MEA_1D_model\MEA model report.docx');
model.result.report('rpt1').set('alwaysask', true);
model.result.report('rpt1').set('background', 'color');
model.result.report('rpt1').set('linkimages', false);
model.result.report('rpt1').feature('tp1').label('CO2RR 1D MEA SCD TDS 202020426 v3');
model.result.report('rpt1').feature('tp1').set('colortheme', 'report');
model.result.report('rpt1').feature('tp1').set('background', 'report');
model.result.report('rpt1').feature('toc1').set('toc', ['1.          Global Definitions' newline '1.1.            Parameters' newline '1.2.            Functions' newline '2.          1D MEA full' newline '2.1.            Definitions' newline '2.2.            Geometry 4' newline '2.3.            Materials' newline '2.4.            SCD - with TDS' newline '2.5.            Just TDS' newline '2.6.            Coefficient Form PDE' newline '2.7.            Mesh 5' newline '3.          param' newline '3.1.            Solver Configurations' newline '4.          Results' newline '4.1.            Data Sets' newline '4.2.            Derived Values' newline '4.3.            Tables' newline '4.4.            Plot Groups' newline ]);
model.result.report('rpt1').feature('sec1').label('Global Definitions');
model.result.report('rpt1').feature('sec1').feature('root1').set('includeunitsystem', true);
model.result.report('rpt1').feature('sec1').feature('sec1').label('Parameters');
model.result.report('rpt1').feature('sec1').feature('sec2').label('Functions');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec2').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec3').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec3').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec3').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec4').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec4').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec4').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec5').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec5').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec5').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec6').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec6').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec6').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec6').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec7').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec7').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec7').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec8').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec8').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec8').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec8').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec9').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec9').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec9').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec9').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec10').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec10').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec10').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec10').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec11').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec11').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec11').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec11').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec12').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec12').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec12').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec12').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec13').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec13').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec13').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec13').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec14').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec14').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec14').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec14').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec15').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec15').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec15').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec15').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec16').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec16').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec16').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec16').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec17').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec17').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec17').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec17').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec18').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec18').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec18').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec18').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec19').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec19').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec19').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec19').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec20').label('Interpolation (for AEM) - only used if replaced in "Membrane-related variables" & the PDE 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec20').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec20').feature('func1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec20').feature('func1').set('background', 'report');
model.result.report('rpt1').feature('sec2').label('1D MEA full');
model.result.report('rpt1').feature('sec2').feature('comp1').set('includeauthor', true);
model.result.report('rpt1').feature('sec2').feature('comp1').set('includedatecreated', true);
model.result.report('rpt1').feature('sec2').feature('comp1').set('includeversion', true);
model.result.report('rpt1').feature('sec2').feature('comp1').set('includeframes', true);
model.result.report('rpt1').feature('sec2').feature('comp1').set('includegeomshapeorder', true);
model.result.report('rpt1').feature('sec2').feature('sec1').label('Definitions');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').label('Variables');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').label('Saturation-related');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').label('Component Couplings');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec1').label('Maximum 1');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec1').feature('cpl1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec1').feature('cpl1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec2').label('Maximum 1.1');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec2').feature('cpl1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec2').feature('sec2').feature('cpl1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec2').label('Geometry 4');
model.result.report('rpt1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec2').feature('geom1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec2').feature('geom1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec3').label('Materials');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').label('Material 1');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').feature('mat1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').feature('mat1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec4').label('Transport of Diluted Species COliq');
model.result.report('rpt1').feature('sec2').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('children', {'reac5' 'on' 'on' 'on';  ...
'cdm1' 'on' 'on' 'on';  ...
'nflx1' 'on' 'on' 'on';  ...
'init1' 'on' 'on' 'on';  ...
'dcont1' 'on' 'on' 'on';  ...
'porous2' 'on' 'on' 'on';  ...
'porous3' 'on' 'on' 'on';  ...
'pec1' 'on' 'on' 'on';  ...
'reac1' 'on' 'on' 'on'});
model.result.report('rpt1').feature('sec2').feature('sec5').label('Transport of Diluted Species COliq 1');
model.result.report('rpt1').feature('sec2').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('phys1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('phys1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('phys1').set('children', {'reac5' 'on' 'on' 'on';  ...
'cdm1' 'on' 'on' 'on';  ...
'nflx1' 'on' 'on' 'on';  ...
'init1' 'on' 'on' 'on';  ...
'dcont1' 'on' 'on' 'on';  ...
'porous2' 'on' 'on' 'on';  ...
'porous3' 'on' 'on' 'on';  ...
'pec1' 'on' 'on' 'on';  ...
'reac1' 'on' 'on' 'on'});
model.result.report('rpt1').feature('sec2').feature('sec6').label('Transport of Diluted Species COliq 1');
model.result.report('rpt1').feature('sec2').feature('sec6').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec6').feature('phys1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec6').feature('phys1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec6').feature('phys1').set('children', {'reac5' 'on' 'on' 'on';  ...
'cdm1' 'on' 'on' 'on';  ...
'nflx1' 'on' 'on' 'on';  ...
'init1' 'on' 'on' 'on';  ...
'dcont1' 'on' 'on' 'on';  ...
'porous2' 'on' 'on' 'on';  ...
'porous3' 'on' 'on' 'on';  ...
'pec1' 'on' 'on' 'on';  ...
'reac1' 'on' 'on' 'on'});
model.result.report('rpt1').feature('sec2').feature('sec7').label('Mesh 8');
model.result.report('rpt1').feature('sec2').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec7').feature('mesh1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec2').feature('sec7').feature('mesh1').set('background', 'report');
model.result.report('rpt1').feature('sec2').feature('sec7').feature('mesh1').set('includestats', true);
model.result.report('rpt1').feature('sec3').label('param');
model.result.report('rpt1').feature('sec3').feature('sec1').label('Solver Configurations');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').label('Solver 1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sol1').set('noderef', 'none');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sol1').set('includelog', true);
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec1').feature('sol1').set('children', {});
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').label('Solver 1.1');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sol1').set('noderef', 'none');
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sol1').set('includelog', true);
model.result.report('rpt1').feature('sec3').feature('sec1').feature('sec2').feature('sol1').set('children', {});
model.result.report('rpt1').feature('sec4').label('Results');
model.result.report('rpt1').feature('sec4').feature('sec1').label('Data Sets');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').label('Data Set 1');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').feature('dset1').label('Data Set 1');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').feature('dset1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').feature('dset1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').feature('dset1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').label('Data Set 1.1');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').feature('dset1').label('Data Set 1');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').feature('dset1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').feature('dset1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').feature('dset1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec2').label('Derived Values');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').label('Derived Values 1');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').feature('num1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec2').label('Derived Values 1.1');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec2').feature('num1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec3').label('Derived Values 1.1');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec3').feature('num1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec3').label('Tables');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').label('Table 1');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').feature('mtbl1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').label('Table 1.1');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').feature('mtbl1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').label('Table 1.1');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').feature('mtbl1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').label('Plot Groups');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').label('Plot Group 1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec1').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec2').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec3').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec4').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec5').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec6').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec7').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec8').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec9').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec10').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec11').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec12').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec13').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec14').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec15').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec16').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec17').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec18').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec19').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec20').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec21').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec22').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec23').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec24').feature('pg1').set('zoomextents', false);
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').label('Plot Group 1.1');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').feature('pg1').set('colortheme', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').feature('pg1').set('background', 'report');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').feature('pg1').set('noderef', 'none');
model.result.report('rpt1').feature('sec4').feature('sec4').feature('sec25').feature('pg1').set('zoomextents', false);

out = model;
